status = info
name= properties_configuration
packages = com.oatsystems.util
#properties.accimulatedFileCount = 5

# Give directory path where log files should get stored
# If this path is to be suffixed with HostDetails, this property has to be over-written like property.basePath = /usr/local/ofs/log/%INSTANCE%/
property.basePath = /usr/local/ofs/log/
property.rollingFileMaxFileSize = 10MB
#property.rollingFileMaxDepth = 8
#property.lastModifiedAge = 30d
#property.logPattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
property.logPattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t] %X: %msg%n
#####################################################################
# List of Log4J2 Appenders                                                                                      #
#####################################################################
#SavantLog and its Appender Details
appender.SavantLog.type = RollingFile
appender.SavantLog.name = SavantLogAppender
appender.SavantLog.fileName= ${basePath}savant.log
#appender.SavantLog.filePattern= ${basePath}savant_%d{yyyyMMdd}.log.gz
appender.SavantLog.filePattern= ${basePath}savant.log.%i
appender.SavantLog.layout.type = PatternLayout
appender.SavantLog.layout.pattern = ${logPattern}
appender.SavantLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.SavantLog.policies.size.type = SizeBasedTriggeringPolicy
appender.SavantLog.policies.size.size = ${rollingFileMaxFileSize}
appender.SavantLog.strategy.type = DefaultRolloverStrategy
appender.SavantLog.strategy.delete.type = Delete
appender.SavantLog.strategy.delete.basePath = ${basePath}
#appender.SavantLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.SavantLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.SavantLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
#appender.SavantLog.immediateFlush = true
appender.SavantLog.strategy.delete.ifFileName.type = IfFileName
appender.SavantLog.strategy.delete.ifFileName.glob = *savant_*.log*
#appender.SavantLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.SavantLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#AlertLog and its Appender Details
appender.AlertLog.type = RollingFile
appender.AlertLog.name = AlertLogAppender
appender.AlertLog.fileName= ${basePath}alert.log
#appender.AlertLog.filePattern= ${basePath}alert_%d{yyyyMMdd}.log.gz
appender.AlertLog.filePattern= ${basePath}alert.log.%i
appender.AlertLog.layout.type = PatternLayout
appender.AlertLog.layout.pattern = ${logPattern}
appender.AlertLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.AlertLog.policies.size.type = SizeBasedTriggeringPolicy
appender.AlertLog.policies.size.size = ${rollingFileMaxFileSize}
appender.AlertLog.strategy.type = DefaultRolloverStrategy
appender.AlertLog.strategy.delete.type = Delete
appender.AlertLog.strategy.delete.basePath = ${basePath}
#appender.AlertLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.AlertLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.AlertLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.AlertLog.strategy.delete.ifFileName.type = IfFileName
appender.AlertLog.strategy.delete.ifFileName.glob = *alert_*.log*
#appender.AlertLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.AlertLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#AppsFile and its Appender Details
appender.AppsFile.type = RollingFile
appender.AppsFile.name = AppsFileAppender
appender.AppsFile.fileName= ${basePath}apps.log
#appender.AppsFile.filePattern= ${basePath}apps_%d{yyyyMMdd}.log.gz
appender.AppsFile.filePattern= ${basePath}apps.log.%i
appender.AppsFile.layout.type = PatternLayout
appender.AppsFile.layout.pattern = ${logPattern}
appender.AppsFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.AppsFile.policies.size.type = SizeBasedTriggeringPolicy
appender.AppsFile.policies.size.size = ${rollingFileMaxFileSize}
appender.AppsFile.strategy.type = DefaultRolloverStrategy
appender.AppsFile.strategy.delete.type = Delete
appender.AppsFile.strategy.delete.basePath = ${basePath}
#appender.AppsFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.AppsFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.AppsFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.AppsFile.strategy.delete.ifFileName.type = IfFileName
appender.AppsFile.strategy.delete.ifFileName.glob = *apps_*.log*
#appender.AppsFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.AppsFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#AuditLog and its Appender Details
appender.AuditLog.type = RollingFile
appender.AuditLog.name = AuditLogAppender
appender.AuditLog.fileName= ${basePath}audit.log
#appender.AuditLog.filePattern= ${basePath}audit_%d{yyyyMMdd}.log.gz
appender.AuditLog.filePattern= ${basePath}audit.log.%i
appender.AuditLog.layout.type = PatternLayout
appender.AuditLog.layout.pattern = ${logPattern}
appender.AuditLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.AuditLog.policies.size.type = SizeBasedTriggeringPolicy
appender.AuditLog.policies.size.size = ${rollingFileMaxFileSize}
appender.AuditLog.strategy.type = DefaultRolloverStrategy
appender.AuditLog.strategy.delete.type = Delete
appender.AuditLog.strategy.delete.basePath = ${basePath}
#appender.AuditLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.AuditLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.AuditLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.AuditLog.strategy.delete.ifFileName.type = IfFileName
appender.AuditLog.strategy.delete.ifFileName.glob = *audit_*.log*
#appender.AuditLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.AuditLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#CommFile and its Appender Details
appender.CommFile.type = RollingFile
appender.CommFile.name = CommFileAppender
appender.CommFile.fileName= ${basePath}comm.log
#appender.CommFile.filePattern= ${basePath}comm_%d{yyyyMMdd}.log.gz
appender.CommFile.filePattern= ${basePath}comm.log.%i
appender.CommFile.layout.type = PatternLayout
appender.CommFile.layout.pattern = ${logPattern}
appender.CommFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.CommFile.policies.size.type = SizeBasedTriggeringPolicy
appender.CommFile.policies.size.size = ${rollingFileMaxFileSize}
appender.CommFile.strategy.type = DefaultRolloverStrategy
appender.CommFile.strategy.delete.type = Delete
appender.CommFile.strategy.delete.basePath = ${basePath}
#appender.CommFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.CommFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.CommFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.CommFile.strategy.delete.ifFileName.type = IfFileName
appender.CommFile.strategy.delete.ifFileName.glob = *comm_*.log*
#appender.CommFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.CommFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#ConfigLog and its Appender Details
appender.ConfigLog.type = RollingFile
appender.ConfigLog.name = ConfigLogAppender
appender.ConfigLog.fileName= ${basePath}config.log
#appender.ConfigLog.filePattern= ${basePath}config_%d{yyyyMMdd}.log.gz
appender.ConfigLog.filePattern= ${basePath}config.log.%i
appender.ConfigLog.layout.type = PatternLayout
appender.ConfigLog.layout.pattern = ${logPattern}
appender.ConfigLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ConfigLog.policies.size.type = SizeBasedTriggeringPolicy
appender.ConfigLog.policies.size.size = ${rollingFileMaxFileSize}
appender.ConfigLog.strategy.type = DefaultRolloverStrategy
appender.ConfigLog.strategy.delete.type = Delete
appender.ConfigLog.strategy.delete.basePath = ${basePath}
#appender.ConfigLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ConfigLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.ConfigLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ConfigLog.strategy.delete.ifFileName.type = IfFileName
appender.ConfigLog.strategy.delete.ifFileName.glob = *config_*.log*
#appender.ConfigLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ConfigLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#ConfigUpdateLog and its Appender Details
appender.ConfigUpdateLog.type = RollingFile
appender.ConfigUpdateLog.name = ConfigUpdateLogAppender
appender.ConfigUpdateLog.fileName= ${basePath}config_update.log
#appender.ConfigUpdateLog.filePattern= ${basePath}config_update_%d{yyyyMMdd}.log.gz
appender.ConfigUpdateLog.filePattern= ${basePath}config_update.log.%i
appender.ConfigUpdateLog.layout.type = PatternLayout
appender.ConfigUpdateLog.layout.pattern = ${logPattern}
appender.ConfigUpdateLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ConfigUpdateLog.policies.size.type = SizeBasedTriggeringPolicy
appender.ConfigUpdateLog.policies.size.size = ${rollingFileMaxFileSize}
appender.ConfigUpdateLog.strategy.type = DefaultRolloverStrategy
appender.ConfigUpdateLog.strategy.delete.type = Delete
appender.ConfigUpdateLog.strategy.delete.basePath = ${basePath}
#appender.ConfigUpdateLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ConfigUpdateLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.ConfigUpdateLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ConfigUpdateLog.strategy.delete.ifFileName.type = IfFileName
appender.ConfigUpdateLog.strategy.delete.ifFileName.glob = *config_update_*.log*
#appender.ConfigUpdateLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ConfigUpdateLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#CTAGIntFile and its Appender Details
appender.CTAGIntFile.type = RollingFile
appender.CTAGIntFile.name = CTAGIntFileAppender
appender.CTAGIntFile.fileName= ${basePath}ctag.log
#appender.CTAGIntFile.filePattern= ${basePath}ctag_%d{yyyyMMdd}.log.gz
appender.CTAGIntFile.filePattern= ${basePath}ctag.log.%i
appender.CTAGIntFile.layout.type = PatternLayout
appender.CTAGIntFile.layout.pattern = ${logPattern}
appender.CTAGIntFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.CTAGIntFile.policies.size.type = SizeBasedTriggeringPolicy
appender.CTAGIntFile.policies.size.size = ${rollingFileMaxFileSize}
appender.CTAGIntFile.strategy.type = DefaultRolloverStrategy
appender.CTAGIntFile.strategy.delete.type = Delete
appender.CTAGIntFile.strategy.delete.basePath = ${basePath}
#appender.CTAGIntFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.CTAGIntFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.CTAGIntFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.CTAGIntFile.strategy.delete.ifFileName.type = IfFileName
appender.CTAGIntFile.strategy.delete.ifFileName.glob = *ctag_*.log*
#appender.CTAGIntFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.CTAGIntFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#DeletedProductsCleanupLog and its Appender Details
appender.DeletedProductsCleanupLog.type = RollingFile
appender.DeletedProductsCleanupLog.name = DeletedProductsCleanupLogAppender
appender.DeletedProductsCleanupLog.fileName= ${basePath}deleted_products_cleanup.log
#appender.DeletedProductsCleanupLog.filePattern= ${basePath}deleted_products_cleanup_%d{yyyyMMdd}.log.gz
appender.DeletedProductsCleanupLog.filePattern= ${basePath}deleted_products_cleanup.log.%i
appender.DeletedProductsCleanupLog.layout.type = PatternLayout
appender.DeletedProductsCleanupLog.layout.pattern = ${logPattern}
appender.DeletedProductsCleanupLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.DeletedProductsCleanupLog.policies.size.type = SizeBasedTriggeringPolicy
appender.DeletedProductsCleanupLog.policies.size.size = ${rollingFileMaxFileSize}
appender.DeletedProductsCleanupLog.strategy.type = DefaultRolloverStrategy
appender.DeletedProductsCleanupLog.strategy.delete.type = Delete
appender.DeletedProductsCleanupLog.strategy.delete.basePath = ${basePath}
#appender.DeletedProductsCleanupLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.DeletedProductsCleanupLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.DeletedProductsCleanupLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.DeletedProductsCleanupLog.strategy.delete.ifFileName.type = IfFileName
appender.DeletedProductsCleanupLog.strategy.delete.ifFileName.glob = *deleted_products_cleanup_*.log*
#appender.DeletedProductsCleanupLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.DeletedProductsCleanupLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#DMETLLog and its Appender Details
appender.DMETLLog.type = RollingFile
appender.DMETLLog.name = DMETLLogAppender
appender.DMETLLog.fileName= ${basePath}dm_etl.log
#appender.DMETLLog.filePattern= ${basePath}dm_etl_%d{yyyyMMdd}.log.gz
appender.DMETLLog.filePattern= ${basePath}dm_etl.log.%i
appender.DMETLLog.layout.type = PatternLayout
appender.DMETLLog.layout.pattern = ${logPattern}
appender.DMETLLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.DMETLLog.policies.size.type = SizeBasedTriggeringPolicy
appender.DMETLLog.policies.size.size = ${rollingFileMaxFileSize}
appender.DMETLLog.strategy.type = DefaultRolloverStrategy
appender.DMETLLog.strategy.delete.type = Delete
appender.DMETLLog.strategy.delete.basePath = ${basePath}
#appender.DMETLLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.DMETLLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.DMETLLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.DMETLLog.strategy.delete.ifFileName.type = IfFileName
appender.DMETLLog.strategy.delete.ifFileName.glob = *dm_etl_*.log*
#appender.DMETLLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.DMETLLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#DMLogFile and its Appender Details
appender.DMLogFile.type = RollingFile
appender.DMLogFile.name = DMLogFileAppender
appender.DMLogFile.fileName= ${basePath}dm.log
#appender.DMLogFile.filePattern= ${basePath}dm_%d{yyyyMMdd}.log.gz
appender.DMLogFile.filePattern= ${basePath}dm.log.%i
appender.DMLogFile.layout.type = PatternLayout
appender.DMLogFile.layout.pattern = ${logPattern}
appender.DMLogFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.DMLogFile.policies.size.type = SizeBasedTriggeringPolicy
appender.DMLogFile.policies.size.size = ${rollingFileMaxFileSize}
appender.DMLogFile.strategy.type = DefaultRolloverStrategy
appender.DMLogFile.strategy.delete.type = Delete
appender.DMLogFile.strategy.delete.basePath = ${basePath}
#appender.DMLogFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.DMLogFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.DMLogFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.DMLogFile.strategy.delete.ifFileName.type = IfFileName
appender.DMLogFile.strategy.delete.ifFileName.glob = *dm_*.log*
#appender.DMLogFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.DMLogFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#DMSFile and its Appender Details
appender.DMSFile.type = RollingFile
appender.DMSFile.name = DMSFileAppender
appender.DMSFile.fileName= ${basePath}dms.log
#appender.DMSFile.filePattern= ${basePath}dms_%d{yyyyMMdd}.log.gz
appender.DMSFile.filePattern= ${basePath}dms.log.%i
appender.DMSFile.layout.type = PatternLayout
appender.DMSFile.layout.pattern = ${logPattern}
appender.DMSFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.DMSFile.policies.size.type = SizeBasedTriggeringPolicy
appender.DMSFile.policies.size.size = ${rollingFileMaxFileSize}
appender.DMSFile.strategy.type = DefaultRolloverStrategy
appender.DMSFile.strategy.delete.type = Delete
appender.DMSFile.strategy.delete.basePath = ${basePath}
#appender.DMSFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.DMSFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.DMSFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.DMSFile.strategy.delete.ifFileName.type = IfFileName
appender.DMSFile.strategy.delete.ifFileName.glob = *dms_*.log*
#appender.DMSFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.DMSFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#DWETLLog and its Appender Details
appender.DWETLLog.type = RollingFile
appender.DWETLLog.name = DWETLLogAppender
appender.DWETLLog.fileName= ${basePath}dw_etl.log
#appender.DWETLLog.filePattern= ${basePath}dw_etl_%d{yyyyMMdd}.log.gz
appender.DWETLLog.filePattern= ${basePath}dw_etl.log.%i
appender.DWETLLog.layout.type = PatternLayout
appender.DWETLLog.layout.pattern = ${logPattern}
appender.DWETLLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.DWETLLog.policies.size.type = SizeBasedTriggeringPolicy
appender.DWETLLog.policies.size.size = ${rollingFileMaxFileSize}
appender.DWETLLog.strategy.type = DefaultRolloverStrategy
appender.DWETLLog.strategy.delete.type = Delete
appender.DWETLLog.strategy.delete.basePath = ${basePath}
#appender.DWETLLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.DWETLLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.DWETLLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.DWETLLog.strategy.delete.ifFileName.type = IfFileName
appender.DWETLLog.strategy.delete.ifFileName.glob = *dw_etl_*.log*
#appender.DWETLLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.DWETLLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#EPMFLog and its Appender Details
appender.EPMFLog.type = RollingFile
appender.EPMFLog.name = EPMFLogAppender
appender.EPMFLog.fileName= ${basePath}epmf.log
#appender.EPMFLog.filePattern= ${basePath}epmf_%d{yyyyMMdd}.log.gz
appender.EPMFLog.filePattern= ${basePath}epmf.log.%i
appender.EPMFLog.layout.type = PatternLayout
appender.EPMFLog.layout.pattern = ${logPattern}
appender.EPMFLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.EPMFLog.policies.size.type = SizeBasedTriggeringPolicy
appender.EPMFLog.policies.size.size = ${rollingFileMaxFileSize}
appender.EPMFLog.strategy.type = DefaultRolloverStrategy
appender.EPMFLog.strategy.delete.type = Delete
appender.EPMFLog.strategy.delete.basePath = ${basePath}
#appender.EPMFLog.strategy.delete.maxDepth = 10
#appender.EPMFLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.EPMFLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.EPMFLog.strategy.delete.ifFileName.type = IfFileName
appender.EPMFLog.strategy.delete.ifFileName.glob = *epmf_*.log*
#appender.EPMFLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.EPMFLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#ErrorsLog and its Appender Details
appender.ErrorsLog.type = RollingFile
appender.ErrorsLog.name = ErrorsLogAppender
appender.ErrorsLog.fileName= ${basePath}oatedge_errors.log
#appender.ErrorsLog.filePattern= ${basePath}oatedge_errors_%d{yyyyMMdd}.log.gz
appender.ErrorsLog.filePattern= ${basePath}oatedge_errors.log.%i
appender.ErrorsLog.layout.type = PatternLayout
appender.ErrorsLog.layout.pattern = ${logPattern}
appender.ErrorsLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ErrorsLog.policies.size.type = SizeBasedTriggeringPolicy
appender.ErrorsLog.policies.size.size = ${rollingFileMaxFileSize}
appender.ErrorsLog.strategy.type = DefaultRolloverStrategy
appender.ErrorsLog.strategy.delete.type = Delete
appender.ErrorsLog.strategy.delete.basePath = ${basePath}
#appender.ErrorsLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ErrorsLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.ErrorsLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ErrorsLog.strategy.delete.ifFileName.type = IfFileName
appender.ErrorsLog.strategy.delete.ifFileName.glob = *oatedge_errors_*.log*
#appender.ErrorsLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ErrorsLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5
appender.ErrorsLog.filter.threshold.type = ThresholdFilter
appender.ErrorsLog.filter.threshold.level = ERROR

#HibernateLog and its Appender Details
appender.HibernateLog.type = RollingFile
appender.HibernateLog.name = HibernateLogAppender
appender.HibernateLog.fileName= ${basePath}hibernate.log
#appender.HibernateLog.filePattern= ${basePath}hibernate_%d{yyyyMMdd}.log.gz
appender.HibernateLog.filePattern= ${basePath}hibernate.log.%i
appender.HibernateLog.layout.type = PatternLayout
appender.HibernateLog.layout.pattern = ${logPattern}
appender.HibernateLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.HibernateLog.policies.size.type = SizeBasedTriggeringPolicy
appender.HibernateLog.policies.size.size = ${rollingFileMaxFileSize}
appender.HibernateLog.strategy.type = DefaultRolloverStrategy
appender.HibernateLog.strategy.delete.type = Delete
appender.HibernateLog.strategy.delete.basePath = ${basePath}
#appender.HibernateLog.strategy.delete.maxDepth = 10
#appender.HibernateLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.HibernateLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.HibernateLog.strategy.delete.ifFileName.type = IfFileName
appender.HibernateLog.strategy.delete.ifFileName.glob = *hibernate_*.log*
#appender.HibernateLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.HibernateLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#MessagingEHLog and its Appender Details
appender.MessagingEHLog.type = RollingFile
appender.MessagingEHLog.name = MessagingEHLogAppender
appender.MessagingEHLog.fileName= ${basePath}messaging_eh.log
#appender.MessagingEHLog.filePattern= ${basePath}messaging_eh_%d{yyyyMMdd}.log.gz
appender.MessagingEHLog.filePattern= ${basePath}messaging_eh.log.%i
appender.MessagingEHLog.layout.type = PatternLayout
appender.MessagingEHLog.layout.pattern = ${logPattern}
appender.MessagingEHLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.MessagingEHLog.policies.size.type = SizeBasedTriggeringPolicy
appender.MessagingEHLog.policies.size.size = ${rollingFileMaxFileSize}
appender.MessagingEHLog.strategy.type = DefaultRolloverStrategy
appender.MessagingEHLog.strategy.delete.type = Delete
appender.MessagingEHLog.strategy.delete.basePath = ${basePath}
#appender.MessagingEHLog.strategy.delete.maxDepth = 40
#appender.MessagingEHLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.MessagingEHLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.MessagingEHLog.strategy.delete.ifFileName.type = IfFileName
appender.MessagingEHLog.strategy.delete.ifFileName.glob = *messaging_eh_*.log*
#appender.MessagingEHLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.MessagingEHLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#MessagingFailureLog and its Appender Details
appender.MessagingFailureLog.type = RollingFile
appender.MessagingFailureLog.name = MessagingFailureLogAppender
appender.MessagingFailureLog.fileName= ${basePath}messaging_failure.log
#appender.MessagingFailureLog.filePattern= ${basePath}messaging_failure_%d{yyyyMMdd}.log.gz
appender.MessagingFailureLog.filePattern= ${basePath}messaging_failure.log.%i
appender.MessagingFailureLog.layout.type = PatternLayout
appender.MessagingFailureLog.layout.pattern = ${logPattern}
appender.MessagingFailureLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.MessagingFailureLog.policies.size.type = SizeBasedTriggeringPolicy
appender.MessagingFailureLog.policies.size.size = ${rollingFileMaxFileSize}
appender.MessagingFailureLog.strategy.type = DefaultRolloverStrategy
appender.MessagingFailureLog.strategy.delete.type = Delete
appender.MessagingFailureLog.strategy.delete.basePath = ${basePath}
#appender.MessagingFailureLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.MessagingFailureLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.MessagingFailureLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.MessagingFailureLog.strategy.delete.ifFileName.type = IfFileName
appender.MessagingFailureLog.strategy.delete.ifFileName.glob = *messaging_failure_*.log*
#appender.MessagingFailureLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.MessagingFailureLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#MessagingLog and its Appender Details
appender.MessagingLog.type = RollingFile
appender.MessagingLog.name = MessagingLogAppender
appender.MessagingLog.fileName= ${basePath}messaging.log
#appender.MessagingLog.filePattern= ${basePath}messaging_%d{yyyyMMdd}.log.gz
appender.MessagingLog.filePattern= ${basePath}messaging.log.%i
appender.MessagingLog.layout.type = PatternLayout
appender.MessagingLog.layout.pattern = ${logPattern}
appender.MessagingLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.MessagingLog.policies.size.type = SizeBasedTriggeringPolicy
appender.MessagingLog.policies.size.size = ${rollingFileMaxFileSize}
appender.MessagingLog.strategy.type = DefaultRolloverStrategy
appender.MessagingLog.strategy.delete.type = Delete
appender.MessagingLog.strategy.delete.basePath = ${basePath}
#appender.MessagingLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.MessagingLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.MessagingLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.MessagingLog.strategy.delete.ifFileName.type = IfFileName
appender.MessagingLog.strategy.delete.ifFileName.glob = *messaging_*.log*
#appender.MessagingLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.MessagingLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#MSGResponse and its Appender Details
appender.MSGResponse.type = RollingFile
appender.MSGResponse.name = MSGResponseAppender
appender.MSGResponse.fileName= ${basePath}msg_response.log
#appender.MSGResponse.filePattern= ${basePath}msg_response_%d{yyyyMMdd}.log.gz
appender.MSGResponse.filePattern= ${basePath}msg_response.log.%i
appender.MSGResponse.layout.type = PatternLayout
appender.MSGResponse.layout.pattern = ${logPattern}
appender.MSGResponse.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.MSGResponse.policies.size.type = SizeBasedTriggeringPolicy
appender.MSGResponse.policies.size.size = ${rollingFileMaxFileSize}
appender.MSGResponse.strategy.type = DefaultRolloverStrategy
appender.MSGResponse.strategy.delete.type = Delete
appender.MSGResponse.strategy.delete.basePath = ${basePath}
#appender.MSGResponse.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.MSGResponse.strategy.delete.ifLastModified.type = IfLastModified
#appender.MSGResponse.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.MSGResponse.strategy.delete.ifFileName.type = IfFileName
appender.MSGResponse.strategy.delete.ifFileName.glob = *msg_response_*.log*
#appender.MSGResponse.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.MSGResponse.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5


#PerfFile and its Appender Details
appender.PerfFile.type = RollingFile
appender.PerfFile.name = PerfFileAppender
appender.PerfFile.fileName= ${basePath}mw_perf.log
#appender.PerfFile.filePattern= ${basePath}mw_perf_%d{yyyyMMdd}.log.gz
appender.PerfFile.filePattern= ${basePath}mw_perf.log.%i
appender.PerfFile.layout.type = PatternLayout
appender.PerfFile.layout.pattern = ${logPattern}
appender.PerfFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.PerfFile.policies.size.type = SizeBasedTriggeringPolicy
appender.PerfFile.policies.size.size = ${rollingFileMaxFileSize}
appender.PerfFile.strategy.type = DefaultRolloverStrategy
appender.PerfFile.strategy.delete.type = Delete
appender.PerfFile.strategy.delete.basePath = ${basePath}
#appender.PerfFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.PerfFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.PerfFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.PerfFile.strategy.delete.ifFileName.type = IfFileName
appender.PerfFile.strategy.delete.ifFileName.glob = *mw_perf_*.log*
#appender.PerfFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.PerfFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#PerfLogFile and its Appender Details
appender.PerfLogFile.type = RollingFile
appender.PerfLogFile.name = PerfLogFileAppender
appender.PerfLogFile.fileName= ${basePath}perf.log
#appender.PerfLogFile.filePattern= ${basePath}perf_%d{yyyyMMdd}.log.gz
appender.PerfLogFile.filePattern= ${basePath}perf.log.%i
appender.PerfLogFile.layout.type = PatternLayout
appender.PerfLogFile.layout.pattern = ${logPattern}
appender.PerfLogFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.PerfLogFile.policies.size.type = SizeBasedTriggeringPolicy
appender.PerfLogFile.policies.size.size = ${rollingFileMaxFileSize}
appender.PerfLogFile.strategy.type = DefaultRolloverStrategy
appender.PerfLogFile.strategy.delete.type = Delete
appender.PerfLogFile.strategy.delete.basePath = ${basePath}
#appender.PerfLogFile.strategy.delete.maxDepth = 10
#appender.PerfLogFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.PerfLogFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.PerfLogFile.strategy.delete.ifFileName.type = IfFileName
appender.PerfLogFile.strategy.delete.ifFileName.glob = *perf_*.log*
#appender.PerfLogFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.PerfLogFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#SAPAIILog and its Appender Details
appender.SAPAIILog.type = RollingFile
appender.SAPAIILog.name = SAPAIILogAppender
appender.SAPAIILog.fileName= ${basePath}sapaii.log
#appender.SAPAIILog.filePattern= ${basePath}sapaii_%d{yyyyMMdd}.log.gz
appender.SAPAIILog.filePattern= ${basePath}sapaii.log.%i
appender.SAPAIILog.layout.type = PatternLayout
appender.SAPAIILog.layout.pattern = ${logPattern}
appender.SAPAIILog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.SAPAIILog.policies.size.type = SizeBasedTriggeringPolicy
appender.SAPAIILog.policies.size.size = ${rollingFileMaxFileSize}
appender.SAPAIILog.strategy.type = DefaultRolloverStrategy
appender.SAPAIILog.strategy.delete.type = Delete
appender.SAPAIILog.strategy.delete.basePath = ${basePath}
#appender.SAPAIILog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.SAPAIILog.strategy.delete.ifLastModified.type = IfLastModified
#appender.SAPAIILog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.SAPAIILog.strategy.delete.ifFileName.type = IfFileName
appender.SAPAIILog.strategy.delete.ifFileName.glob = *sapaii_*.log*
#appender.SAPAIILog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.SAPAIILog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#ScenarioFile and its Appender Details
appender.ScenarioFile.type = RollingFile
appender.ScenarioFile.name = ScenarioFileAppender
appender.ScenarioFile.fileName= ${basePath}scenarios.log
#appender.ScenarioFile.filePattern= ${basePath}scenarios_%d{yyyyMMdd}.log.gz
appender.ScenarioFile.filePattern= ${basePath}scenarios.log.%i
appender.ScenarioFile.layout.type = PatternLayout
appender.ScenarioFile.layout.pattern = ${logPattern}
appender.ScenarioFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ScenarioFile.policies.size.type = SizeBasedTriggeringPolicy
appender.ScenarioFile.policies.size.size = ${rollingFileMaxFileSize}
appender.ScenarioFile.strategy.type = DefaultRolloverStrategy
appender.ScenarioFile.strategy.delete.type = Delete
appender.ScenarioFile.strategy.delete.basePath = ${basePath}
#appender.ScenarioFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ScenarioFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.ScenarioFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ScenarioFile.strategy.delete.ifFileName.type = IfFileName
appender.ScenarioFile.strategy.delete.ifFileName.glob = *scenarios_*.log*
#appender.ScenarioFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ScenarioFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#ScenarioToolsFile and its Appender Details
appender.ScenarioToolsFile.type = RollingFile
appender.ScenarioToolsFile.name = ScenarioToolsFileAppender
appender.ScenarioToolsFile.fileName= ${basePath}scenario_tools.log
#appender.ScenarioToolsFile.filePattern= ${basePath}scenario_tools_%d{yyyyMMdd}.log.gz
appender.ScenarioToolsFile.filePattern= ${basePath}scenario_tools.log.%i
appender.ScenarioToolsFile.layout.type = PatternLayout
appender.ScenarioToolsFile.layout.pattern = ${logPattern}
appender.ScenarioToolsFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ScenarioToolsFile.policies.size.type = SizeBasedTriggeringPolicy
appender.ScenarioToolsFile.policies.size.size = ${rollingFileMaxFileSize}
appender.ScenarioToolsFile.strategy.type = DefaultRolloverStrategy
appender.ScenarioToolsFile.strategy.delete.type = Delete
appender.ScenarioToolsFile.strategy.delete.basePath = ${basePath}
#appender.ScenarioToolsFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ScenarioToolsFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.ScenarioToolsFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ScenarioToolsFile.strategy.delete.ifFileName.type = IfFileName
appender.ScenarioToolsFile.strategy.delete.ifFileName.glob = *scenario_tools_*.log*
#appender.ScenarioToolsFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ScenarioToolsFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#SMXFile and its Appender Details
appender.SMXFile.type = RollingFile
appender.SMXFile.name = SMXFileAppender
appender.SMXFile.fileName= ${basePath}smx.log
#appender.SMXFile.filePattern= ${basePath}smx_%d{yyyyMMdd}.log.gz
appender.SMXFile.filePattern= ${basePath}smx.log.%i
appender.SMXFile.layout.type = PatternLayout
appender.SMXFile.layout.pattern = ${logPattern}
appender.SMXFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.SMXFile.policies.size.type = SizeBasedTriggeringPolicy
appender.SMXFile.policies.size.size = ${rollingFileMaxFileSize}
appender.SMXFile.strategy.type = DefaultRolloverStrategy
appender.SMXFile.strategy.delete.type = Delete
appender.SMXFile.strategy.delete.basePath = ${basePath}
#appender.SMXFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.SMXFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.SMXFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.SMXFile.strategy.delete.ifFileName.type = IfFileName
appender.SMXFile.strategy.delete.ifFileName.glob = *smx_*.log*
#appender.SMXFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.SMXFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#StatusFile and its Appender Details
appender.StatusFile.type = RollingFile
appender.StatusFile.name = StatusFileAppender
appender.StatusFile.fileName= ${basePath}status.log
#appender.StatusFile.filePattern= ${basePath}status_%d{yyyyMMdd}.log.gz
appender.StatusFile.filePattern= ${basePath}status.log.%i
appender.StatusFile.layout.type = PatternLayout
appender.StatusFile.layout.pattern = ${logPattern}
appender.StatusFile.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.StatusFile.policies.size.type = SizeBasedTriggeringPolicy
appender.StatusFile.policies.size.size = ${rollingFileMaxFileSize}
appender.StatusFile.strategy.type = DefaultRolloverStrategy
appender.StatusFile.strategy.delete.type = Delete
appender.StatusFile.strategy.delete.basePath = ${basePath}
#appender.StatusFile.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.StatusFile.strategy.delete.ifLastModified.type = IfLastModified
#appender.StatusFile.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.StatusFile.strategy.delete.ifFileName.type = IfFileName
appender.StatusFile.strategy.delete.ifFileName.glob = *status_*.log*
#appender.StatusFile.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.StatusFile.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#TDSLog and its Appender Details
appender.TDSLog.type = RollingFile
appender.TDSLog.name = TDSLogAppender
appender.TDSLog.fileName= ${basePath}tds.log
#appender.TDSLog.filePattern= ${basePath}tds_%d{yyyyMMdd}.log.gz
appender.TDSLog.filePattern= ${basePath}tds.log.%i
appender.TDSLog.layout.type = PatternLayout
appender.TDSLog.layout.pattern = ${logPattern}
appender.TDSLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.TDSLog.policies.size.type = SizeBasedTriggeringPolicy
appender.TDSLog.policies.size.size = ${rollingFileMaxFileSize}
appender.TDSLog.strategy.type = DefaultRolloverStrategy
appender.TDSLog.strategy.delete.type = Delete
appender.TDSLog.strategy.delete.basePath = ${basePath}
#appender.TDSLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.TDSLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.TDSLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.TDSLog.strategy.delete.ifFileName.type = IfFileName
appender.TDSLog.strategy.delete.ifFileName.glob = *tds_*.log*
#appender.TDSLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.TDSLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#ZooKeeperLog and its Appender Details
appender.ZooKeeperLog.type = RollingFile
appender.ZooKeeperLog.name = ZooKeeperLogAppender
appender.ZooKeeperLog.fileName= ${basePath}zoo_keeper.log
#appender.ZooKeeperLog.filePattern= ${basePath}zoo_keeper_%d{yyyyMMdd}.log.gz
appender.ZooKeeperLog.filePattern= ${basePath}zoo_keeper.log.%i
appender.ZooKeeperLog.layout.type = PatternLayout
appender.ZooKeeperLog.layout.pattern = ${logPattern}
appender.ZooKeeperLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.ZooKeeperLog.policies.size.type = SizeBasedTriggeringPolicy
appender.ZooKeeperLog.policies.size.size = ${rollingFileMaxFileSize}
appender.ZooKeeperLog.strategy.type = DefaultRolloverStrategy
appender.ZooKeeperLog.strategy.delete.type = Delete
appender.ZooKeeperLog.strategy.delete.basePath = ${basePath}
#appender.ZooKeeperLog.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.ZooKeeperLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.ZooKeeperLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.ZooKeeperLog.strategy.delete.ifFileName.type = IfFileName
appender.ZooKeeperLog.strategy.delete.ifFileName.glob = *zoo_keeper_*.log*
#appender.ZooKeeperLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.ZooKeeperLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#SAMLLOG and its Appender Details
appender.SAMLLOG.type = RollingFile
appender.SAMLLOG.name = SAMLLOGAppender
appender.SAMLLOG.fileName= ${basePath}saml.log
#appender.SAMLLOG.filePattern= ${basePath}saml_%d{yyyyMMdd}.log.gz
appender.SAMLLOG.filePattern= ${basePath}saml.log.%i
appender.SAMLLOG.layout.type = PatternLayout
appender.SAMLLOG.layout.pattern = ${logPattern}
appender.SAMLLOG.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.SAMLLOG.policies.size.type = SizeBasedTriggeringPolicy
appender.SAMLLOG.policies.size.size = ${rollingFileMaxFileSize}
appender.SAMLLOG.strategy.type = DefaultRolloverStrategy
appender.SAMLLOG.strategy.delete.type = Delete
appender.SAMLLOG.strategy.delete.basePath = ${basePath}
#appender.SAMLLOG.strategy.delete.maxDepth = ${rollingFileMaxDepth}
#appender.SAMLLOG.strategy.delete.ifLastModified.type = IfLastModified
#appender.SAMLLOG.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.SAMLLOG.strategy.delete.ifFileName.type = IfFileName
appender.SAMLLOG.strategy.delete.ifFileName.glob = *saml_*.log*
#appender.SAMLLOG.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.SAMLLOG.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISLog and its Appender Details
appender.OATEPCISLog.type = RollingFile
appender.OATEPCISLog.name = OATEPCISLogAppender
appender.OATEPCISLog.fileName= ${basePath}oat_epcis.log
#appender.OATEPCISLog.filePattern= ${basePath}oat_epcis_%d{yyyyMMdd}.log.gz
appender.OATEPCISLog.filePattern= ${basePath}oat_epcis.log.%i
appender.OATEPCISLog.layout.type = PatternLayout
appender.OATEPCISLog.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISLog.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISLog.policies.size.size = 100MB
appender.OATEPCISLog.strategy.type = DefaultRolloverStrategy
appender.OATEPCISLog.strategy.delete.type = Delete
appender.OATEPCISLog.strategy.delete.basePath = ${basePath}
#appender.OATEPCISLog.strategy.delete.maxDepth = 20
#appender.OATEPCISLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISLog.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISLog.strategy.delete.ifFileName.glob = *oat_epcis_*.log*
#appender.OATEPCISLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISLagLog and its Appender Details
appender.OATEPCISLagLog.type = RollingFile
appender.OATEPCISLagLog.name = OATEPCISLagLogAppender
appender.OATEPCISLagLog.fileName= ${basePath}oat_epcis_lag.log
#appender.OATEPCISLagLog.filePattern= ${basePath}oat_epcis_lag_%d{yyyyMMdd}.log.gz
appender.OATEPCISLagLog.filePattern= ${basePath}oat_epcis_lag.log.%i
appender.OATEPCISLagLog.layout.type = PatternLayout
appender.OATEPCISLagLog.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISLagLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISLagLog.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISLagLog.policies.size.size = 100MB
appender.OATEPCISLagLog.strategy.type = DefaultRolloverStrategy
appender.OATEPCISLagLog.strategy.delete.type = Delete
appender.OATEPCISLagLog.strategy.delete.basePath = ${basePath}
#appender.OATEPCISLagLog.strategy.delete.maxDepth = 20
#appender.OATEPCISLagLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISLagLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISLagLog.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISLagLog.strategy.delete.ifFileName.glob = *oat_epcis_lag_*.log*
#appender.OATEPCISLagLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISLagLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISAuditLog and its Appender Details
appender.OATEPCISAuditLog.type = RollingFile
appender.OATEPCISAuditLog.name = OATEPCISAuditLogAppender
appender.OATEPCISAuditLog.fileName= ${basePath}oat_epcis_audit.log
#appender.OATEPCISAuditLog.filePattern= ${basePath}oat_epcis_audit_%d{yyyyMMdd}.log.gz
appender.OATEPCISAuditLog.filePattern= ${basePath}oat_epcis_audit.log.%i
appender.OATEPCISAuditLog.layout.type = PatternLayout
appender.OATEPCISAuditLog.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISAuditLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISAuditLog.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISAuditLog.policies.size.size = 100MB
appender.OATEPCISAuditLog.strategy.type = DefaultRolloverStrategy
appender.OATEPCISAuditLog.strategy.delete.type = Delete
appender.OATEPCISAuditLog.strategy.delete.basePath = ${basePath}
#appender.OATEPCISAuditLog.strategy.delete.maxDepth = 20
#appender.OATEPCISAuditLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISAuditLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISAuditLog.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISAuditLog.strategy.delete.ifFileName.glob = *oat_epcis_audit_*.log*
#appender.OATEPCISAuditLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISAuditLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISSentLog and its Appender Details
appender.OATEPCISSentLog.type = RollingFile
appender.OATEPCISSentLog.name = OATEPCISSentLogAppender
appender.OATEPCISSentLog.fileName= ${basePath}oat_epcis_sent.log
#appender.OATEPCISSentLog.filePattern= ${basePath}oat_epcis_sent_%d{yyyyMMdd}.log.gz
appender.OATEPCISSentLog.filePattern= ${basePath}oat_epcis_sent.log.%i
appender.OATEPCISSentLog.layout.type = PatternLayout
appender.OATEPCISSentLog.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISSentLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISSentLog.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISSentLog.policies.size.size = 100MB
appender.OATEPCISSentLog.strategy.type = DefaultRolloverStrategy
appender.OATEPCISSentLog.strategy.delete.type = Delete
appender.OATEPCISSentLog.strategy.delete.basePath = ${basePath}
#appender.OATEPCISSentLog.strategy.delete.maxDepth = 20
#appender.OATEPCISSentLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISSentLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISSentLog.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISSentLog.strategy.delete.ifFileName.glob = *oat_epcis_sent_*.log*
#appender.OATEPCISSentLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISSentLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISSentFailedLog and its Appender Details
appender.OATEPCISSentFailedLog.type = RollingFile
appender.OATEPCISSentFailedLog.name = OATEPCISSentFailedLogAppender
appender.OATEPCISSentFailedLog.fileName= ${basePath}oat_epcis_sent_failed.log
#appender.OATEPCISSentFailedLog.filePattern= ${basePath}oat_epcis_sent_failed_%d{yyyyMMdd}.log.gz
appender.OATEPCISSentFailedLog.filePattern= ${basePath}oat_epcis_sent_failed.log.%i
appender.OATEPCISSentFailedLog.layout.type = PatternLayout
appender.OATEPCISSentFailedLog.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISSentFailedLog.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISSentFailedLog.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISSentFailedLog.policies.size.size = 100MB
appender.OATEPCISSentFailedLog.strategy.type = DefaultRolloverStrategy
appender.OATEPCISSentFailedLog.strategy.delete.type = Delete
appender.OATEPCISSentFailedLog.strategy.delete.basePath = ${basePath}
#appender.OATEPCISSentFailedLog.strategy.delete.maxDepth = 20
#appender.OATEPCISSentFailedLog.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISSentFailedLog.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISSentFailedLog.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISSentFailedLog.strategy.delete.ifFileName.glob = *oat_epcis_sent_failed_*.log*
#appender.OATEPCISSentFailedLog.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISSentFailedLog.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#OATEPCISMsgIdErrorCode and its Appender Details
appender.OATEPCISMsgIdErrorCode.type = RollingFile
appender.OATEPCISMsgIdErrorCode.name = OATEPCISMsgIdErrorCodeAppender
appender.OATEPCISMsgIdErrorCode.fileName= ${basePath}oat_epcis_messageid_errorcode.log
#appender.OATEPCISMsgIdErrorCode.filePattern= ${basePath}oat_epcis_messageid_errorcode_%d{yyyyMMdd}.log.gz
appender.OATEPCISMsgIdErrorCode.filePattern= ${basePath}oat_epcis_messageid_errorcode.log.%i
appender.OATEPCISMsgIdErrorCode.layout.type = PatternLayout
appender.OATEPCISMsgIdErrorCode.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c] [%t]: %msg%n
appender.OATEPCISMsgIdErrorCode.policies.type = Policies
# Size Based Trigger. This will maintain 10 files. Once each file reaches 10MB it rolls over.
appender.OATEPCISMsgIdErrorCode.policies.size.type = SizeBasedTriggeringPolicy
appender.OATEPCISMsgIdErrorCode.policies.size.size = 100MB
appender.OATEPCISMsgIdErrorCode.strategy.type = DefaultRolloverStrategy
appender.OATEPCISMsgIdErrorCode.strategy.delete.type = Delete
appender.OATEPCISMsgIdErrorCode.strategy.delete.basePath = ${basePath}
#appender.OATEPCISMsgIdErrorCode.strategy.delete.maxDepth = 20
#appender.OATEPCISMsgIdErrorCode.strategy.delete.ifLastModified.type = IfLastModified
#appender.OATEPCISMsgIdErrorCode.strategy.delete.ifLastModified.age = ${lastModifiedAge}
appender.OATEPCISMsgIdErrorCode.strategy.delete.ifFileName.type = IfFileName
appender.OATEPCISMsgIdErrorCode.strategy.delete.ifFileName.glob = *oat_epcis_messageid_errorcode_*.log*
#appender.OATEPCISMsgIdErrorCode.strategy.delete.ifFileName.ifAccumulatedFileCount.type = IfAccumulatedFileCount
#appender.OATEPCISMsgIdErrorCode.strategy.delete.ifFileName.ifAccumulatedFileCount.exceeds = 5

#AppInsightsLog and its Appender Details
appender.AppInsightsLog.type = CustomApplicationInsightsAppender
appender.AppInsightsLog.name = AppInsightsLogAppender
appender.AppInsightsLog.instrumentationKey =
appender.AppInsightsLog.layout.type = PatternLayout
appender.AppInsightsLog.layout.pattern = %d{ISO8601} %-5p [%c] [%t] %X: %m%n

#SendGridLog and its Appender Details
appender.CustomEmailLog.type = CustomSendGridAppender
appender.CustomEmailLog.name = CustomEmailLogAppender

#EPCISEmailNotificationLog and its Appender Details
#appender.EPCISEmailNotificationLog.type = EPCISEmailNotificationAppender
#appender.EPCISEmailNotificationLog.name = CustomEPCISEmailNotificationAppender

#AlertAppender and its Appender Details
#appender.AlertAppender.type = StatusEventAppender
#appender.AlertAppender.name = AlertAppenderAppender
#appender.AlertAppender.CacheName = AlertCache
#appender.AlertAppender.DiskStorePath = /usr/local/ofs/log/.ehcache

#DeviceMonitoredEventAppender and its Appender Details
#appender.DeviceMonitoredEventAppender.type = MonitoringEventAppender
#appender.DeviceMonitoredEventAppender.name = DeviceMonitoredEventAppenderAppender
#appender.DeviceMonitoredEventAppender.CacheName = DeviceLogCache
#appender.DeviceMonitoredEventAppender.DiskStorePath = /usr/local/ofs/log/.ehcache

#DMMonitoredEventAppender and its Appender Details
appender.DMMonitoredEventAppender.type = MonitoringEventAppender
appender.DMMonitoredEventAppender.name = DMMonitoredEventAppenderAppender
appender.DMMonitoredEventAppender.CacheName = DMLogCache
appender.DMMonitoredEventAppender.DiskStorePath = /usr/local/ofs/log/.ehcache

#WorkflowMonitoredEventAppender and its Appender Details
appender.WorkflowMonitoredEventAppender.type = MonitoringEventAppender
appender.WorkflowMonitoredEventAppender.name = WorkflowMonitoredEventAppenderAppender
appender.WorkflowMonitoredEventAppender.CacheName = WorkflowLogCache
appender.WorkflowMonitoredEventAppender.DiskStorePath = /usr/local/ofs/log/.ehcache

appender.SavantLog.immediateFlush = true
appender.AlertLog.immediateFlush = true
appender.AppsFile.immediateFlush = true
appender.AuditLog.immediateFlush = true
appender.CommFile.immediateFlush = true
appender.ConfigLog.immediateFlush = true
appender.ConfigUpdateLog.immediateFlush = true
appender.CTAGIntFile.immediateFlush = true
appender.DeletedProductsCleanupLog.immediateFlush = true
appender.DMETLLog.immediateFlush = true
appender.DMLogFile.immediateFlush = true
appender.DMSFile.immediateFlush = true
appender.DWETLLog.immediateFlush = true
appender.EPMFLog.immediateFlush = true
appender.ErrorsLog.immediateFlush = true
appender.HibernateLog.immediateFlush = true
appender.MessagingEHLog.immediateFlush = true
appender.MessagingFailureLog.immediateFlush = true
appender.MessagingLog.immediateFlush = true
appender.MSGResponse.immediateFlush = true
appender.PerfFile.immediateFlush = true
appender.PerfLogFile.immediateFlush = true
appender.SAPAIILog.immediateFlush = true
appender.ScenarioFile.immediateFlush = true
appender.ScenarioToolsFile.immediateFlush = true
appender.SMXFile.immediateFlush = true
appender.StatusFile.immediateFlush = true
appender.TDSLog.immediateFlush = true
appender.ZooKeeperLog.immediateFlush = true
appender.SAMLLOG.immediateFlush = true
appender.OATEPCISLog.immediateFlush = true
appender.OATEPCISLagLog.immediateFlush = true
appender.OATEPCISAuditLog.immediateFlush = true
appender.OATEPCISSentLog.immediateFlush = true
appender.OATEPCISSentFailedLog.immediateFlush = true
appender.OATEPCISMsgIdErrorCode.immediateFlush = true

appender.SavantLog.strategy.max = 8
appender.AlertLog.strategy.max = 8
appender.AppsFile.strategy.max = 8
appender.AuditLog.strategy.max = 8
appender.CommFile.strategy.max = 8
appender.ConfigLog.strategy.max = 8
appender.ConfigUpdateLog.strategy.max = 8
appender.CTAGIntFile.strategy.max = 8
appender.DeletedProductsCleanupLog.strategy.max = 8
appender.DMETLLog.strategy.max = 8
appender.DMLogFile.strategy.max = 8
appender.DMSFile.strategy.max = 8
appender.DWETLLog.strategy.max = 8
appender.EPMFLog.strategy.max = 10
appender.ErrorsLog.strategy.max = 8
appender.HibernateLog.strategy.max = 10
appender.MessagingEHLog.strategy.max = 40
appender.MessagingFailureLog.strategy.max = 8
appender.MessagingLog.strategy.max = 8
appender.MSGResponse.strategy.max = 8
appender.PerfFile.strategy.max = 8
appender.PerfLogFile.strategy.max = 10
appender.SAPAIILog.strategy.max = 8
appender.ScenarioFile.strategy.max = 8
appender.ScenarioToolsFile.strategy.max = 8
appender.SMXFile.strategy.max = 8
appender.StatusFile.strategy.max = 8
appender.TDSLog.strategy.max = 8
appender.ZooKeeperLog.strategy.max = 8
appender.SAMLLOG.strategy.max = 8
appender.OATEPCISLog.strategy.max = 20
appender.OATEPCISLagLog.strategy.max = 20
appender.OATEPCISAuditLog.strategy.max = 20
appender.OATEPCISSentLog.strategy.max = 20
appender.OATEPCISSentFailedLog.strategy.max = 20
appender.OATEPCISMsgIdErrorCode.strategy.max = 20


#####################################################################
# List of Log4J2 Loggers/Categories                                                             #
#####################################################################
#Category:alert and its Logger Details
logger.alert.name = alert
logger.alert.level = INFO
logger.alert.additivity = false


#Category:alert.notification and its Logger Details
logger.alert-notification.name = alert.notification
logger.alert-notification.level = INFO
logger.alert-notification.additivity = false


#Category:ctag and its Logger Details
logger.ctag.name = ctag
logger.ctag.level = INFO
logger.ctag.additivity = false


#Category:ctag.ccs and its Logger Details
logger.ctag-ccs.name = ctag.ccs
logger.ctag-ccs.level = INFO
logger.ctag-ccs.additivity = false


#Category:ctag.dms and its Logger Details
logger.ctag-dms.name = ctag.dms
logger.ctag-dms.level = INFO
logger.ctag-dms.additivity = false


#Category:ctag.dm.etl and its Logger Details
logger.ctag-dm-etl.name = ctag.dm.etl
logger.ctag-dm-etl.level = DEBUG
logger.ctag-dm-etl.additivity = false


#Category:ctag.service.config and its Logger Details
logger.ctag-service-config.name = ctag.service.config
logger.ctag-service-config.level = INFO
logger.ctag-service-config.additivity = false


#Category:ctag.service.configupdate and its Logger Details
logger.ctag-service-configupdate.name = ctag.service.configupdate
logger.ctag-service-configupdate.level = INFO
logger.ctag-service-configupdate.additivity = false


#Category:ctag.smx and its Logger Details
logger.ctag-smx.name = ctag.smx
logger.ctag-smx.level = INFO
logger.ctag-smx.additivity = false


#Category:ctag.tds and its Logger Details
logger.ctag-tds.name = ctag.tds
logger.ctag-tds.level = ERROR
logger.ctag-tds.additivity = false


#Category:apps and its Logger Details
logger.apps.name = apps
logger.apps.level = INFO
logger.apps.additivity = false


#Category:wfe and its Logger Details
logger.wfe.name = wfe
logger.wfe.level = INFO
logger.wfe.additivity = false


#Category:wfe.tools and its Logger Details
logger.wfe-tools.name = wfe.tools
logger.wfe-tools.level = INFO
logger.wfe-tools.additivity = false


#Category:ctag.util.perf and its Logger Details
logger.ctag-util-perf.name = ctag.util.perf
logger.ctag-util-perf.level = DEBUG
logger.ctag-util-perf.additivity = false


#Category:org.hibernate and its Logger Details
logger.org-hibernate.name = org.hibernate
logger.org-hibernate.level = WARN
logger.org-hibernate.additivity = false


#Category:net.sf.ehcache.store.MemoryStore and its Logger Details
logger.net-sf-ehcache-store-MemoryStore.name = net.sf.ehcache.store.MemoryStore
logger.net-sf-ehcache-store-MemoryStore.level = WARN
logger.net-sf-ehcache-store-MemoryStore.additivity = false


#Category:comm and its Logger Details
logger.comm.name = comm
logger.comm.level = INFO
logger.comm.additivity = false


#Category:status and its Logger Details
logger.status.name = status
logger.status.level = INFO
logger.status.additivity = false


#Category:etl.dw and its Logger Details
logger.etl-dw.name = etl.dw
logger.etl-dw.level = INFO
logger.etl-dw.additivity = false


#Category:perf and its Logger Details
logger.perf.name = perf
logger.perf.level = INFO
logger.perf.additivity = false


#Category:epmf.ems and its Logger Details
logger.epmf-ems.name = epmf.ems
logger.epmf-ems.level = INFO
logger.epmf-ems.additivity = false


#Category:ctag.service.sapaii and its Logger Details
logger.ctag-service-sapaii.name = ctag.service.sapaii
logger.ctag-service-sapaii.level = DEBUG
logger.ctag-service-sapaii.additivity = false


#Category:messageresponse and its Logger Details
logger.messageresponse.name = messageresponse
logger.messageresponse.level = INFO
logger.messageresponse.additivity = false


#Category:com.oatsystems.messaging and its Logger Details
logger.com-oatsystems-messaging.name = com.oatsystems.messaging
logger.com-oatsystems-messaging.level = INFO
logger.com-oatsystems-messaging.additivity = false


#Category:com.oatsystems.messaging.error.failure and its Logger Details
logger.com-oatsystems-messaging-error-failure.name = com.oatsystems.messaging.error.failure
logger.com-oatsystems-messaging-error-failure.level = INFO
logger.com-oatsystems-messaging-error-failure.additivity = false


#Category:com.azure.core.amqp and its Logger Details
logger.com-azure-core-amqp.name = com.azure.core.amqp
logger.com-azure-core-amqp.level = INFO
logger.com-azure-core-amqp.additivity = false


#Category:com.azure.messaging.eventhubs and its Logger Details
logger.com-azure-messaging-eventhubs.name = com.azure.messaging.eventhubs
logger.com-azure-messaging-eventhubs.level = INFO
logger.com-azure-messaging-eventhubs.additivity = false


#Category:org.apache.activemq and its Logger Details
logger.org-apache-activemq.name = org.apache.activemq
logger.org-apache-activemq.level = INFO
logger.org-apache-activemq.additivity = false


#Category:com.oatsystems.spring.aspect and its Logger Details
logger.com-oatsystems-spring-aspect.name = com.oatsystems.spring.aspect
logger.com-oatsystems-spring-aspect.level = INFO
logger.com-oatsystems-spring-aspect.additivity = false


#Category:com.oatsystems.ws.client and its Logger Details
logger.com-oatsystems-ws-client.name = com.oatsystems.ws.client
logger.com-oatsystems-ws-client.level = INFO
logger.com-oatsystems-ws-client.additivity = false


#Category:com.oatsystems.spring.util and its Logger Details
logger.com-oatsystems-spring-util.name = com.oatsystems.spring.util
logger.com-oatsystems-spring-util.level = INFO
logger.com-oatsystems-spring-util.additivity = false


#Category:com.oatsystems.fileimport.service and its Logger Details
logger.com-oatsystems-fileimport-service.name = com.oatsystems.fileimport.service
logger.com-oatsystems-fileimport-service.level = INFO
logger.com-oatsystems-fileimport-service.additivity = false


#Category:com.oatsystems.cc.event and its Logger Details
logger.com-oatsystems-cc-event.name = com.oatsystems.cc.event
logger.com-oatsystems-cc-event.level = INFO
logger.com-oatsystems-cc-event.additivity = false


#Category:com.oatsystems.service.apparel.DeletedProductsCleanup and its Logger Details
logger.com-oatsystems-service-apparel-DeletedProductsCleanup.name = com.oatsystems.service.apparel.DeletedProductsCleanup
logger.com-oatsystems-service-apparel-DeletedProductsCleanup.level = INFO
logger.com-oatsystems-service-apparel-DeletedProductsCleanup.additivity = false


#Category:com.oatsystems.service.zk and its Logger Details
logger.com-oatsystems-service-zk.name = com.oatsystems.service.zk
logger.com-oatsystems-service-zk.level = INFO
logger.com-oatsystems-service-zk.additivity = false


#Category:com.oatsystems.service.apparel.ZKRetirementReasonSyncService and its Logger Details
logger.com-oatsystems-service-apparel-ZKRetirementReasonSyncService.name = com.oatsystems.service.apparel.ZKRetirementReasonSyncService
logger.com-oatsystems-service-apparel-ZKRetirementReasonSyncService.level = INFO
logger.com-oatsystems-service-apparel-ZKRetirementReasonSyncService.additivity = false


#Category:com.oatsystems.axis.services.ZKFilterService and its Logger Details
logger.com-oatsystems-axis-services-ZKFilterService.name = com.oatsystems.axis.services.ZKFilterService
logger.com-oatsystems-axis-services-ZKFilterService.level = INFO
logger.com-oatsystems-axis-services-ZKFilterService.additivity = false


#Category:org.apache.zookeeper and its Logger Details
logger.org-apache-zookeeper.name = org.apache.zookeeper
logger.org-apache-zookeeper.level = WARN
logger.org-apache-zookeeper.additivity = false


#Category:org.apache.curator and its Logger Details
logger.org-apache-curator.name = org.apache.curator
logger.org-apache-curator.level = INFO
logger.org-apache-curator.additivity = false

#Category:com.checkpt.properties.zk logger details 
logger.com-checkpt-properties-zk.name = com.checkpt.properties.zk
logger.com-checkpt-properties-zk.level = INFO
logger.com-checkpt-properties-zk.additivity = false



#Category:ctag.dms.devices and its Logger Details
logger.ctag-dms-devices.name = ctag.dms.devices
#logger.ctag-dms-devices.level = INHERITED
logger.ctag-dms-devices.level = INFO
logger.ctag-dms-devices.additivity = false


#Category:ctag.dm and its Logger Details
logger.ctag-dm.name = ctag.dm
logger.ctag-dm.level = INFO
logger.ctag-dm.additivity = false


#Category:wfe.listener and its Logger Details
logger.wfe-listener.name = wfe.listener
logger.wfe-listener.level = DEBUG
logger.wfe-listener.additivity = false


#Category:alerts and its Logger Details
logger.alerts.name = alerts
logger.alerts.level = INFO
logger.alerts.additivity = false


#Category:org.llrp.ltk and its Logger Details
logger.org-llrp-ltk.name = org.llrp.ltk
logger.org-llrp-ltk.level = WARN
logger.org-llrp-ltk.additivity = false


#Category:org.springframework.security and its Logger Details
logger.org-springframework-security.name = org.springframework.security
logger.org-springframework-security.level = INFO
logger.org-springframework-security.additivity = false


#Category:PROTOCOL_MESSAGE and its Logger Details
logger.PROTOCOL_MESSAGE.name = PROTOCOL_MESSAGE
logger.PROTOCOL_MESSAGE.level = INFO
logger.PROTOCOL_MESSAGE.additivity = false


#Category:org.opensaml and its Logger Details
logger.org-opensaml.name = org.opensaml
logger.org-opensaml.level = INFO
logger.org-opensaml.additivity = false

#Category:com.oatsystems.project.epcis and its Logger Details
logger.com-oatsystems-project-epcis.name = com.oatsystems.project.epcis
logger.com-oatsystems-project-epcis.level = INFO
logger.com-oatsystems-project-epcis.additivity = false

#Category:com.oatsystems.project.epcis.eventlag and its Logger Details
logger.com-oatsystems-project-epcis-eventlag.name = com.oatsystems.project.epcis.eventlag
logger.com-oatsystems-project-epcis-eventlag.level = WARN
logger.com-oatsystems-project-epcis-eventlag.additivity = false

#Category:com.oatsystems.project.epcis.subscriber.audit and its Logger Details
logger.com-oatsystems-project-epcis-subscriber-audit.name = com.oatsystems.project.epcis.subscriber.audit
logger.com-oatsystems-project-epcis-subscriber-audit.level = INFO
logger.com-oatsystems-project-epcis-subscriber-audit.additivity = false

#Category:com.oatsystems.project.epcis.sentevents and its Logger Details
logger.com-oatsystems-project-epcis-sentevents.name = com.oatsystems.project.epcis.sentevents
logger.com-oatsystems-project-epcis-sentevents.level = INFO
logger.com-oatsystems-project-epcis-sentevents.additivity = false

#Category:com.oatsystems.project.epcis.sentfailedevents and its Logger Details
logger.com-oatsystems-project-epcis-sentfailedevents.name = com.oatsystems.project.epcis.sentfailedevents
logger.com-oatsystems-project-epcis-sentfailedevents.level = INFO
logger.com-oatsystems-project-epcis-sentfailedevents.additivity = false

#Category:com.oatsystems.project.epcis.msgiderrorcode and its Logger Details
logger.com-oatsystems-project-epcis-msgiderrorcode.name = com.oatsystems.project.epcis.msgiderrorcode
logger.com-oatsystems-project-epcis-msgiderrorcode.level = INFO
logger.com-oatsystems-project-epcis-msgiderrorcode.additivity = false

#Category:com.checkpt.zk.tenant and its Logger Details
logger.com-checkpt-zk-tenant.name = com.checkpt.zk.tenant
logger.com-checkpt-zk-tenant.level = INFO
logger.com-checkpt-zk-tenant.additivity = false

#####################################################################
# List of Log4J2 Loggers - Appender Mapping                                                     #
#####################################################################
# Root logger referring to savantLog, ErrosLog & ApplicationInsightsLog appender
rootLogger.level = INFO
rootLogger.appenderRef.SavantLog.ref = SavantLogAppender
rootLogger.appenderRef.ErrorsLog.ref = ErrorsLogAppender
rootLogger.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender

#Category Loggers
logger.alert.appenderRef.AlertLog.ref = AlertLogAppender
logger.alert.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.alert.appenderRef.CustomEmailLog.ref = CustomEmailLogAppender
logger.alert-notification.appenderRef.AlertLog.ref = AlertLogAppender
logger.alert-notification.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.alert-notification.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag.appenderRef.CTAGIntFile.ref = CTAGIntFileAppender
logger.ctag.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-ccs.appenderRef.DMLogFile.ref = DMLogFileAppender
logger.ctag-ccs.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-ccs.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-dms.appenderRef.DMSFile.ref = DMSFileAppender
logger.ctag-dms.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-dms.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-dm-etl.appenderRef.DMETLLog.ref = DMETLLogAppender
logger.ctag-dm-etl.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-service-config.appenderRef.ConfigLog.ref = ConfigLogAppender
logger.ctag-service-config.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-service-config.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-service-configupdate.appenderRef.ConfigUpdateLog.ref = ConfigUpdateLogAppender
logger.ctag-service-configupdate.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-service-configupdate.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-smx.appenderRef.SMXFile.ref = SMXFileAppender
logger.ctag-smx.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-smx.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-tds.appenderRef.TDSLog.ref = TDSLogAppender
logger.ctag-tds.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-tds.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.apps.appenderRef.AppsFile.ref = AppsFileAppender
logger.apps.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.apps.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.wfe.appenderRef.ScenarioFile.ref = ScenarioFileAppender
logger.wfe.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.wfe.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.wfe-tools.appenderRef.ScenarioToolsFile.ref = ScenarioToolsFileAppender
logger.wfe-tools.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.wfe-tools.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-util-perf.appenderRef.PerfLogFile.ref = PerfLogFileAppender
logger.ctag-util-perf.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.org-hibernate.appenderRef.HibernateLog.ref = HibernateLogAppender
logger.org-hibernate.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.net-sf-ehcache-store-MemoryStore.appenderRef.HibernateLog.ref = HibernateLogAppender
logger.net-sf-ehcache-store-MemoryStore.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.comm.appenderRef.CommFile.ref = CommFileAppender
logger.comm.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.status.appenderRef.StatusFile.ref = StatusFileAppender
#logger.status.appenderRef.AlertAppender.ref = AlertAppenderAppender
logger.status.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.etl-dw.appenderRef.DWETLLog.ref = DWETLLogAppender
logger.etl-dw.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.perf.appenderRef.PerfFile.ref = PerfFileAppender
logger.perf.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.epmf-ems.appenderRef.EPMFLog.ref = EPMFLogAppender
logger.epmf-ems.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.ctag-service-sapaii.appenderRef.SAPAIILog.ref = SAPAIILogAppender
logger.ctag-service-sapaii.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.ctag-service-sapaii.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.messageresponse.appenderRef.MSGResponse.ref = MSGResponseAppender
logger.messageresponse.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.com-oatsystems-messaging.appenderRef.MessagingLog.ref = MessagingLogAppender
logger.com-oatsystems-messaging.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-messaging.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.com-oatsystems-messaging-error-failure.appenderRef.MessagingFailureLog.ref = MessagingFailureLogAppender
logger.com-oatsystems-messaging-error-failure.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.com-azure-core-amqp.appenderRef.MessagingEHLog.ref = MessagingEHLogAppender
logger.com-azure-core-amqp.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-azure-messaging-eventhubs.appenderRef.MessagingEHLog.ref = MessagingEHLogAppender
logger.com-azure-messaging-eventhubs.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.org-apache-activemq.appenderRef.CommFile.ref = CommFileAppender
logger.org-apache-activemq.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-spring-aspect.appenderRef.AuditLog.ref = AuditLogAppender
logger.com-oatsystems-spring-aspect.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-ws-client.appenderRef.AuditLog.ref = AuditLogAppender
logger.com-oatsystems-ws-client.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-spring-util.appenderRef.AuditLog.ref = AuditLogAppender
logger.com-oatsystems-spring-util.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-fileimport-service.appenderRef.AuditLog.ref = AuditLogAppender
logger.com-oatsystems-fileimport-service.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-cc-event.appenderRef.MessagingLog.ref = MessagingLogAppender
logger.com-oatsystems-cc-event.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-service-apparel-DeletedProductsCleanup.appenderRef.DeletedProductsCleanupLog.ref = DeletedProductsCleanupLogAppender
logger.com-oatsystems-service-apparel-DeletedProductsCleanup.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-service-zk.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.com-oatsystems-service-zk.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-service-apparel-ZKRetirementReasonSyncService.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.com-oatsystems-service-apparel-ZKRetirementReasonSyncService.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-axis-services-ZKFilterService.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.com-oatsystems-axis-services-ZKFilterService.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.org-apache-zookeeper.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.org-apache-curator.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
#logger.ctag-dms-devices.appenderRef.DeviceMonitoredEventAppender.ref = DeviceMonitoredEventAppenderAppender
logger.ctag-dm.appenderRef.DMMonitoredEventAppender.ref = DMMonitoredEventAppenderAppender
logger.ctag-dm.appenderRef.DMLogFile.ref = DMLogFileAppender
logger.ctag-dm.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.wfe-listener.appenderRef.WorkflowMonitoredEventAppender.ref = WorkflowMonitoredEventAppenderAppender
#logger.alerts.appenderRef.AlertAppender.ref = AlertAppenderAppender
logger.alerts.appenderRef.StatusFile.ref = StatusFileAppender
logger.org-springframework-security.appenderRef.SAMLLOG.ref = SAMLLOGAppender
logger.org-springframework-security.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.org-springframework-security.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.PROTOCOL_MESSAGE.appenderRef.SAMLLOG.ref = SAMLLOGAppender
logger.PROTOCOL_MESSAGE.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.PROTOCOL_MESSAGE.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.org-opensaml.appenderRef.SAMLLOG.ref = SAMLLOGAppender
logger.org-opensaml.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.org-opensaml.appenderRef.AppInsightsLog.ref = AppInsightsLogAppender
logger.com-oatsystems-project-epcis.appenderRef.OATEPCISLog.ref = OATEPCISLogAppender
logger.com-oatsystems-project-epcis.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-oatsystems-project-epcis-eventlag.appenderRef.OATEPCISLagLog.ref = OATEPCISLagLogAppender
logger.com-oatsystems-project-epcis-subscriber-audit.appenderRef.OATEPCISAuditLog.ref = OATEPCISAuditLogAppender
logger.com-oatsystems-project-epcis-sentevents.appenderRef.OATEPCISSentLog.ref = OATEPCISSentLogAppender
logger.com-oatsystems-project-epcis-sentfailedevents.appenderRef.OATEPCISSentFailedLog.ref = OATEPCISSentFailedLogAppender
logger.com-oatsystems-project-epcis-msgiderrorcode.appenderRef.OATEPCISMsgIdErrorCode.ref = OATEPCISMsgIdErrorCodeAppender
#logger.com-oatsystems-project-epcis-msgiderrorcode.appenderRef.EPCISEmailNotificationLog.ref = CustomEPCISEmailNotificationAppender
logger.com-checkpt-zk-tenant.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.com-checkpt-zk-tenant.appenderRef.ErrorsLog.ref = ErrorsLogAppender
logger.com-checkpt-properties-zk.appenderRef.ZooKeeperLog.ref = ZooKeeperLogAppender
logger.com-checkpt-properties-zk.appenderRef.ErrorsLog.ref = ErrorsLogAppender

#####################################################################
# List of Log4J2 References                                                                                     #
#####################################################################
## Following are sample references, if we need to maintain one huge file per day. Commenting the same for now.
# Rotate log file each day and keep 30 days worth
#appender.AlertLog.policies.time.type = TimeBasedTriggeringPolicy
#appender.AlertLog.policies.time.interval = 1
#appender.AlertLog.policies.time.modulate = true
## Delete files older than 30 days
#appender.AlertLog.strategy.delete.ifLastModified.age = 30d
