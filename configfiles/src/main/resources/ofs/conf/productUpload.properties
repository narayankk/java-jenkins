# Number of product aggregated for a batch insert/upload
batchSize=500

# File encoding, to override JVM setting if necessary. It is important to specify non-ANSI character set encoded in the file.
#fileEncoding=UTF-8

# Comma separated file extensions supported by product file upload, list only those other than .XML and .CSV. Prefix with period(.) 
#supportedExtensions=.JSON,.LOG

# Custom implementation of product file parser by file extension
#CSV.classname

# CustomAttributeList contains additional custom attributes for the product
#CSV.CustomAttributeList=Department,DeptName,MajorClassID,SubClassID,VendorStyle,Active,Color,Size,Style,StyleID,ModelSKU,SalesFloorTarget,BusinessGroupID,BusinessGroupDesc,FloorPadID,FloorPadDesc,MajorClassCode,MajorClassDesc,BoxID,WideIndicator
CSV.CustomAttributeList=GTIN,StyleColor,Style,Color,ColorDescription,Size,SizeCode,SalesFloorTarget,TradeItem,Gender,Brand,Department,MerchandiseCategory,SubCategory,Season,Collection,Price,ModelSKU,ImageURL
# Record delimiter - (default="\\|")  field delimiter for product records.  Note this is a RegularExpression string, so characters like '.', '+', '|', etc. will need to be escaped with a "\\"
CSV.Delimiter=\\|

# The following provide a mapping of the attribute to the index or position of the field within an input record
CSV.SKU=0
CSV.UOM=1
# CVS.DefaultUOM - default value to use if UOM is not defined
# CVS.StyleCode - index if style code on input line, if both StyleCode and DefaultStyleCode are undefined, StyleCode is set to empty string
# CVS.DefaultStyleCode - default value to user if StyleCode is not defined
# GTIN indicates SGTIN encoding
CSV.GTIN=2
CSV.CompanyPrefixLength=3
# CSV.DefaultCompanyPrefixLength - default value to use if CompanyPrefixLength is not defined
CSV.Manufacturer=4
CSV.ProductName=5
CSV.CompanyPrefix=6
# CSV.DefaultCompanyPrefix - default value to use if CompanyPrefix is not defined 
# AssetType indicates GRAI encoding
CSV.AssetType=7
CSV.RangeActive=8
CSV.RangeStart=9
CSV.RangeEnd=10

CSV.StyleColor=11
CSV.Style=12
CSV.Color=13
CSV.ColorDescription=14
CSV.Size=15
CSV.SizeCode=16
CSV.SalesFloorTarget=17
CSV.TradeItem=18
CSV.Gender=19
CSV.Brand=20
CSV.Department=21
CSV.MerchandiseCategory=22
CSV.SubCategory=23
CSV.Season=24
CSV.Collection=25
CSV.Price=26
CSV.ModelSKU=27
CSV.ImageURL=28


########################
# To upload products using rapidproduct uploader.
#
#Mandatory and necessary attributes for upload are #SKU,UOM,ENCODING_SCHEME,PRODUCT_NAME,MANUFACTURER_NAME,COMPANY_PREFIX,START_SERIAL_NUMBER,END_SERIAL_NUMBER,OBJECT_CLASS
#
#If ENCODING_SCHEME is sgtin, then GTIN is also mandatory field.
#
#Along with the above, add custom product attributes. Attribute Data order should be the same in csv file 
########################
#product.upload.attr.order=SKU,GTIN,PRODUCT_NAME,STYLE_COLOR,STYLE,COLOR,COLOR_DESCRIPTION,SIZE_,SIZE_CODE,SALES_FLOOR_TARGET,TRADE_ITEM,MANUFACTURER_NAME,GENDER,BRAND,DEPARTMENT,MERCHANDISE_CATEGORY,SUB_CATEGORY,SEASON,COLLECTION,PRICE,MODEL_SKU,IMAGE_URL
product.upload.attr.order=sku,GTIN,name,StyleColor,Style,Color,ColorDescription,Size,SizeCode,SalesFloorTarget,TradeItem,Gender,Brand,Department,MerchandiseCategory,SubCategory,Season,Collection,Price,ModelSKU,ImageURL

##This option is to allow upload during xpress/ea is up when the count of product going to uploaded is lesser than or equal to this threshold value
##If the upload product count is more than this threshold value and xpress is up, the tool will not allow to upload products. In this case, xpress has to be down for uploading products.
product.upload.xpressUp.thresholdCount=500000

##List the attributes that going to have default value
## the attribute is already present in csv, then the default value will be assigned when record has null value in csv
## the attribute is not at all present in csv, then default value will be assigned for all the records
## Fix for MV-11429 IF PRODUCT_NAME is null, it should take SKU value by default
#product.upload.defaultValuedAttrs=PRODUCT_NAME

#Example below
#product.upload.defaultValuedAttrs=MANUFACTURER_NAME,STYLE_CODE,START_SERIAL_NUMBER,END_SERIAL_NUMBER,time1,date1,name1

product.upload.defaultValuedAttrs=uom,epcIdentityType,startSerialNumber,endSerialNumber
##,ACTIVE

#Some attributes can take value through custom way for which we need to specify the class that gives value to the attribute. "CLASS:" is the keyword to invoke the class file
#For manufacturer_name, there is an existing class to provide value. 
#product.upload.defaultValue.MANUFACTURER_NAME=CLASS:com.oatsystems.service.product.ManufacturerAttrValueExtractor

#auto_detect attribute is to obtain COMPANY_PREFIX and OBJECT_CLASS directly from GTIN. In case these values are directly given, this attribute can be #set false.
#auto_detect=true
#to remove header this property must be set Refer MV-8476
header=false

#to support foreign characters like Japanese
#Refer MV-9509
#File format should be UTF-16LE BOM
symbol_exists=false
#If auto_detect is true then its mandatory to give attributes that are to be detected under key auto_detect_attr and from which class and attribute #they should be detected under key product.upload.defaultValue.auto_detect_attr
#Note: The below auto detect attrs should not be mentioned in product.upload.attr.order
#auto_detect_attr=companyPrefix,objectClass
#product.upload.defaultValue.auto_detect_attr=CLASS:com.oatsystems.service.product.LegacyCompanyPrefixGTINExtractor,$GTIN

#product.upload.companyprefixextractor.attr.minlength=12
#product.upload.companyprefixextractor.attr.maxlength=14

#Some attributes can take value from other attributes. For this case, "$" followed by attribute name is the key. 
#product.upload.defaultValue.STYLE_CODE=$SKU
## Fix for MV-11429 IF PRODUCT_NAME is null, it should take SKU value by default
product.upload.defaultValue.name=$sku
## The below configuration would be used for single attribute.
#product.upload.defaultValue.imageURL.default=$format(https://nike.com/images/%s_%s,$sku,$color)
## This is used when the image URL is based on multiple attributes. The string would be split by "," and $sku would be replaced with the actual value
## Example URL for the above configuration https://nike.com/images/15660986526151_Blue

## This is added as a default value with standard product attributes definition. 
product.upload.defaultValue.uom=Item
product.upload.defaultValue.epcIdentityType=sgtin
product.upload.defaultValue.startSerialNumber=1000
product.upload.defaultValue.endSerialNumber=100000
## By default companyPrefix and objectClass is inferred from GTIN. If GTIN is not present it will infer from sku
product.upload.defaultValue.identityCode=$GTIN
##product.upload.defaultValue.ACTIVE=YES
#Some attributes can have constant values. for date "YYYY-MM-DD" and timestamp "YYYY-MM-DD HH24:MI:SS" are the format.
#product.upload.defaultValue.START_SERIAL_NUMBER=1000
#product.upload.defaultValue.END_SERIAL_NUMBER=100000
#product.upload.defaultValue.time1=2017-08-21 23:30:23
#product.upload.defaultValue.date1=2017-08-21
#product.upload.defaultValue.name1=rapidProductUploader

##Batch size for flushing csv writer while generalizing the Product Master
csv.writer.flush.batch.size=100

##Default input file encoding type is set as UTF-8
##If the file is of different encoding type, say, UTF-16LE, then input_file_format=UTF-16LE should be set
input_file_format=UTF-8

##Default delimiter is "|". This configuration indicates the delimiter that is used in the product upload csv file.
## It is configured based on the delimiter that is used in the product csv file given by the customer.
product.upload.attributes.separator=\\|

##In Mongo sync, Indicated for every n number of batches notification has to be sent.
productUpload.mongosync.sendBatchNotification=10

## To enable pojo based product upload set the value to true, else to follow the legacy based set it to false
product.upload.csvparser.pojo=false

##Product context upload configurations##
#########################################
# Default product context attribute separator - '|'
# If customer want to use a different character, specify it using the property, 
#          productcontext.upload.attributes.separator 
# If the separator character is a Java special character, mention it explictly by prefixing \\, like \\|.
#########################################
#productcontext.upload.attributes.separator=\\|

#########################################
# Header row in a product context file is optional.
# To enable uploading product context without a header row define the header row using the property
#          productcontext.upload.noheader.attributes.order
# All product context uploads should follow the same order of attributes
# Header fields should also be separated using the same 'attribute separator' used in the file
#########################################
#productcontext.upload.noheader.attributes.order=markerType|markerValue|productId|Color|Size

#########################################
# Header row in a product context file can have custom names 
# and it can be mapped to a product context standard and/or attribute name
# Define the set of custom headers using the property
#          productcontext.upload.header.custom
#
# Each custom header name defined should have a mapping correspond to 
# product context's standard or attribute name
#########################################
#productcontext.upload.header.custom=Category|CategoryId|SKU|ColorCode
#productcontext.upload.header.custom.Category=markerType
#productcontext.upload.header.custom.CategoryId=markerValue
#productcontext.upload.header.custom.SKU=productId
#productcontext.upload.header.custom.ColorCode=Color

#########################################
# By default, product context markers are nothing but location attributes
# 
# In case marker names are different from location attribute names
# Define the marker to location attribute using the property
#           productcontext.marker.<marker type>=location.<attribute name>
#########################################
#productcontext.marker.REGION=location.regioncode
#productcontext.marker.COUNTRY=location.countrycode
#productcontext.marker.STORE=location.gln

########################################################################################

# Waiting period for bloom filter refresh (in ms)
#product.upload.bloomfilter.refresh=10000
# Waiting period for force bloom filter refresh (in ms)
#product.upload.bloomfilter.forcerefresh=100000