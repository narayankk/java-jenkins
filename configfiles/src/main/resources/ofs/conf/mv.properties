#######################################################################################
###   OBSOLETE PROPERTIES - BEGIN
#######################################################################################



#######################################################################################
##Please specify if the mid day refresh is required with the property 'mid_day_refresh_required' property 
##having the values 'true' or 'false'.
##The schedule property specifies when the task has to run.
##Format 1.  Minute: Minutes after the hour (0-59).
##2. Hour - 24-hour format (0-23).
##3. Day - Day of the month (1-31).
##4. Month - Month of the year (1-12).
##5. Weekday - Day of the week. (0-6; the 0 refers to Sunday). 
## Eg -  30 23 * * *
##	  will run the specified task every evening at 11:30. 
## Eg 2 - */5 * * * * 
## The task will be run every 5 minutes
#######################################################################################

## OBSOLETE

oat.task.dbrefresh.mid_day_refresh_required=true
oat.task.dbrefresh.period=30 12 * * *

oat.task.oosprocess.enabled=false
oat.task.oosprocess.schedule=0 0 8,20 1/1 * ? *

## OBSOLETE

## Property oavprocess.enabled below WAS used to determine if
# logging to object_assn_verification should be done asynchronously. 
# It has been replaced by property "txn.log_assn_verification_in_oav" in savant.properties.
# Service ProcessOAVService will now use this new property in savant.properties to determine
# if a scheduled task should be started. 
# An implication of the change: there's no option to synchronously log OAV row any more. 
# The only option is to log asynchronously. This is ok since the last_seen_ts in OA will be 
# used instead of the last row of OAV. 'last_seen_ts' in OA is always logged synchronously. 
#oat.task.oavprocess.enabled=false
oat.task.oavprocess.schedule=0 12,23 * * *


## OBSOLETE
oat.task.purgedbprocess.NO_OF_DAYS_CC_DETAIL_ID=30
oat.task.purgedbprocess.NO_OF_DAYS_INVENTORY=365
oat.task.purgedbprocess.NO_OF_DAYS_TO_RETAIN_DATA_IN_STAGING_TABLES=365
oat.task.purgedbprocess.BATCHSIZE=5000
oat.task.purgedbprocess.IS_PURGE_INVENTORY=false
oat.task.purgedbprocess.IS_DAILY=true
oat.task.purgedbprocess.PURGE_MODE=Days
oat.task.purgedbprocess.NO_OF_CCs_TO_RETAIN=5
oat.task.purgedbprocess.NO_OF_DAYS_ASN_RETAIN=14
oat.task.purgedbprocess.IS_PURGE_ASN=false
oat.task.purgedbprocess.NO_OF_DAYS_TO_RETAIN_DATA_IN_AUTORETIRE_TABLES=45
oat.task.purgedbprocess.NO_OF_DAYS_IN_SHELFTARGET_TABLES=45
oat.task.purgedbprocess.NO_OF_DAYS_TO_RETAIN_DATA_IN_PROCESS_TABLE=365
oat.task.purgedbprocess.NO_OF_DAYS_TO_RETAIN_DATA_IN_PROCESS_ERRORLOG_TABLE=120
oat.task.purgedbprocess.IS_PURGE_PROCESS=true

## OBSOLETE

bgcalc.historical_inventory=false
bgcalc.oos=false

## OBSOLETE

oat.task.custom.ProcessShelfTarget.description=Move shelf target values from shelf_target_history to shelf_target
##true only for production store servers
oat.task.custom.ProcessShelfTarget.enabled=false
oat.task.custom.ProcessShelfTarget.period=*/30 * * * *
oat.task.custom.ProcessShelfTarget.class=com.oatsystems.task.ProcessShelfTargetTask

## OBSOLETE

oat.task.custom.autoRetireTask.enable=false
oat.task.custom.autoRetireTask.productCategory=Size
oat.task.custom.autoRetireTask.InventoryDaysOfTheWeek.*=Monday,Thursday
#oat.task.custom.autoRetireTask.MaxThresholdChecks.*=1
oat.task.custom.autoRetireTask.startTime=20:00:00
oat.task.custom.autoRetireTask.minutesPastStarttime=300
oat.task.custom.autoRetireTask.parentTask=HistoricalInventoryTask
oat.task.custom.autoRetireTask.childJob=AutoRetireTriggerTask
oat.task.custom.autoRetireTask.oif.directory=/usr/local/nifi/data-out/

## OBSOLETE

# Auto retire trigger task
auto_retire_trigger_task.delay_time=10000
auto_retire.rules_file.name=mv-autoretirerules
auto_retire_trigger_task.wfe_status_recheck_time=60000

## OBSOLETE

#ASN Receive grace period in days
#This configuration being used for retiring expired ASN epcs
asn_recv.grace_period.days=7

## OBSOLETE

##Details for the dummy product used for assigning items after retirement if using reusable tags.
##This product is NECESSARY if mv.tag.reusable=true. You should 
## 1. Create the product as part of product master data.
## 2. Uncomment the following 3 lines 
## 3. Modify the sku, uom and style_code values to have the right data for the dummy product loaded in step 1. 
dummy_product.sku=NO_PRODUCT
dummy_product.uom=Item
dummy_product.style_code=



## OBSOLETE
## How many items should be stored in counted_item table in one batch
cc.commit.batch_size=1000


## CC processing using SP
## OBSOLETE

## Should this Xpress server use stored proc or not? 
## Default is false. 
cc.processing.use_SP=false

## If using SP:
## How many CCs can be processed by each run of the SP?
## Default is set to 5, because that's what got tested most. 
## Works well for small number of stores and a medium d/b of about 8GB RAM and 2/4 cores.
cc.processing.number_of_CC_to_process=5

## For whole store cycle count (usually a Team CC), there could be new EPCs or missing EPCs seen. 
## Which location should they be assigned to?
## Location is not specified directly. Instead the location subtype should be specified.
## The highest leaf-level location with this location subtype will be picked.
## If there are many, then preference is for such a location with IsDefaultBLForParent set to true. 
## If there is none, one such location will be arbitrarily picked.
cc.wholestore.default_location_subtype=Sales Floor


## OBSOLETE

## Default attribute configurations for the reports
report.pi.product_attrs=Size, Color
report.retired.product_attrs=Product Name,Size,Color,Manufacturer
report.poe.product_attrs=Product Name,Size,Color,Manufacturer,Department
report.missing.product_attrs=Product Name,Size,Color,Department
report.sold.product_attrs=Product Name,Size,Color,Department
report.inventory_at_location.product_attrs=Product Name,Size,Color
report.remove_items.product_attrs=SKU,Product Name,Size
report.unseen_items.product_attrs=Product Name,Size,Color
report.adj_inv.product_attrs=Product Name, Size,Color

## To specify attributes based on report output format 
## report.<report_name>.<format>.product_attrs=
## where format could be pdf/xls/csv... 
## If not specified, the default configuration will be applicable.

report.adj_inv.categories=SalesFloor,Backroom,Receiving,Total
report.adj_inv.states_for_category.SalesFloor=Saleable.SF
report.adj_inv.states_for_category.Backroom=Saleable.BR
report.adj_inv.states_for_category.Receiving=Saleable.Recv
report.adj_inv.states_for_category.Total=Saleable.SF,Saleable.BR,Saleable.Recv

report.adj_inv.states.restock_from=Saleable.BR, Saleable.Recv

report.adj_inv.states.restock_to=Saleable.SF

report.adj_inv.total_inv_category=Total

report.adj_inv.aggregation_attr=SKU

#possible values are : Start Time, End Time, Duration, HH ID, Discrepancy Threshold
report.cc_accuracy.addl_columns=Discrepancy Threshold

## This property, if enabled, will report inventory at the specified aggregate level
## instead of at the SKU level.
#report.pi.aggregation_attr=Style

##allowed reporting categories
##This is a list of categories for which data should be shown in the report.
##Max values possible are 5. If there are more categories, they will be ignored.
##Data will be displayed in the order in which categories are listed here. 
##Any string can be used here, as long as there's a corresponding state defn below. 
##Suggested values in the list are:
## SalesFloor
## Backroom
## Receiving
## InTransit
## Total
## Loaned
## Reserved
## New
report.pi.categories=SalesFloor,Backroom,Receiving,Total

##Listed below, for each of the categories in the list above, the corresponding list of states. 
##The sum of these states' inventory will be displayed in the report for the category. 

#report.pi.subtypes_for_category.SalesFloor=Sales Floor
#report.pi.subtypes_for_category.Backroom=Backroom
#report.pi.subtypes_for_category.Receiving=Receiving Area
#report.pi.subtypes_for_category.InTransit=Staging Area
#report.pi.subtypes_for_category.Total=Sales Floor, Backroom, Receiving Area
report.pi.states_for_category.SalesFloor=Saleable.SF
report.pi.states_for_category.Backroom=Saleable.BR
report.pi.states_for_category.Receiving=Saleable.Recv
report.pi.states_for_category.InTransit=InTransit
#report.pi.states_for_category.Total=Sales Floor, Backroom, Receiving Area, Returns Area
report.pi.states_for_category.Total=Saleable.SF,Saleable.BR,Saleable.Recv,Saleable.Returns

##The following are other possible categories and subtypes
#report.pi.states_for_category.Loaned=Loaned
#report.pi.states_for_category.Reserved=Reserved
#report.pi.states_for_category.New=New


## OBSOLETE

## This property defines what states contribute to the site inventory. 
## It is not clear if a separate definition of total inventory other than the one for PI report is 
## needed. So commenting it out now. If necessary, a separate defn can be used.
#states.total_inv=Saleable.SF,Saleable.BR,Saleable.Recv,Saleable.Returns


################################################################################
## Inventory Adjustment and PoS data upload service related properties
################################################################################

## OBSOLETE

# Adjust inventory data service
# Default is set to 5 minutes
inventory_adjustments.enabled=false

#######################################################################################
###   OBSOLETE PROPERTIES - END
#######################################################################################


#######################################################################################
###   POSSIBLY OBSOLETE PROPERTIES - BEGIN
#######################################################################################


##ConceptDoc Retirement
## Possibly obsolete


## The following are the retirement codes. These are reloaded at startup.
## For modifying retirement codes, only properties file needs to be modified;
## on startup they'll be synchronized with database table 'retirement_reason'.
ret_code.ITEM_SOLD=Item is sold
ret_code.ITEM_SHIPPED=Item is shipped from store
ret_code.ITEM_MISSING=Item is confirmed missing
ret_code.ITEM_UNKNOWN=Item is unknown; detached tag
ret_code.ITEM_DESTROYED=Item is destroyed
ret_code.TAG_MISSING=Tag missing from item; will retag
ret_code.TAG_FAILED=Tag failed; will retag
ret_code.TAG_WRONG_FOR_ITEM=Tag wrong for item; will retag
ret_code.ITEM_DETACHED=Item is auto-detached by internal process

# The default retirement code
default.ret_code=ITEM_SOLD
# The default POS code used in webservice
default.pos_code=ITEM_SOLD
# The default retirement code for auto-detachment by internal process
default.detachment_ret_code=ITEM_DETACHED
# The POS locations configuration file
pos.locations.filename=/usr/local/ofs/conf/PosLocations.xml

## Retirement location was configured in app_properties.properties earlier.
## While this is a good place for that property, the mechanism to indicate
## a retirement location has now changed - an sslt_code of 213, meaning
## 'Out Of Site Location', when assigned to a BL will indicate it as the
## retirement location.
## ret_loc=


## Possibly Obsolete

##From CandA - infrastructure to add custom tasks; currently empty in MV, will be used by projects
custom_tasks=PlaceholderTask,ProcessShelfTarget,ClearVDSTask,PurgeTmpReportFilesTask

oat.task.custom.PurgeTmpReportFilesTask.enabled=true
oat.task.custom.PurgeTmpReportFilesTask.description=delete the old rpt doc files
oat.task.custom.PurgeTmpReportFilesTask.period=00 04 * * *
oat.task.custom.PurgeTmpReportFilesTask.class=com.oatsystems.task.PurgeTmpReportFilesTask


oat.task.custom.ClearVDSTask.enabled=false
oat.task.custom.ClearVDSTask.description=Clears VDS SKUs List
oat.task.custom.ClearVDSTask.period=59 23 * * *
oat.task.custom.ClearVDSTask.class=com.oatsystems.task.ClearSoldItemsTask

#Enterprise expiry report end time
enterprise_task_report_expiry_config=02:00:00

##ConceptDoc POE
## Possibly Obsolete

## Virtual Deactivation
##
## Maximum items to be cached for whitelist
##  mv.vd.whitelist.max_size=1000
## Number of seconds a whitelist item expires
## mv.vd.whitelist.expire_in_sec=3600
## Number of milliseconds to wait for other whitelist items to arrive and group in one message
##  mv.vd.whitelist_delay_broadcast_msec=1000

##ConceptDoc Cycle Count Acceptance
## Possibly obsolete

########################################################################################
## email notfication for CC waiting for acceptance
CC_ACCEPTANCE_EMAIL_ALERT_SUBJECT=Cycle count in the location <STORE_LOCATION> on <DATE> at <TIME> is pending for approval.

## If the URL sent via email alert should use server ip adress automatically then the URL is:
##       <a href="<PROTOCOL>://<IPADDRESS>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT"><PROTOCOL>://<IPADDRESS>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT</a>
## If the URL should use a static IP then replace the string <IPADDRESS> in the above URL with the static ip
## If the URL sent via email alert should use server hostname automatically then the URL is:
##       <a href="<PROTOCOL>://<HOSTNAME>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT"><PROTOCOL>://<HOSTNAME>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT</a>
## If the URL should use a standard hostname then replace the string <HOSTNAME> in the above URL with the hostname
CC_ACCEPTANCE_EMAIL_ALERT_CONTENT=Cycle Count performed in the location <STORE_LOCATION> on <DATE> at <TIME> by <OPERATOR> is pending for acceptance. <br/><br/> <a href="<PROTOCOL>://<IPADDRESS>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT"><PROTOCOL>://<IPADDRESS>:@WEBAPP_PORT@/oatedge/controller?event=COMPLIANCE_REPORT_EVENT</a> <br/><br/> Note: This is an auto-generated e-mail. Please do not reply back to this e-mail.<br/>

##ConceptDoc Cycle Count - Get Expected Product-Count
## Possibly Obsolete

## Should expected_item and expected_product tables in the staging sub-schema be used?
## If true (default), at the beginning of CC these 2 tables will be populated
## with expected inventory data.
## It SHOULD be true in one or more of these cases:
## 1. Authoritative CC is used
## 2. CC Acceptance report is used 
## Note that counted_item table in the staging sub-schema will ALWAYS be used.
## Setting this flag to false does not disable using counted_item. 
mv.cc.use_staging=true
## If true (default), CC will populate expected items
## Else CC will not populate expected items
mv.cc.non_auth.use_staging=false
## If false (default), auto acceptance CC will be processed in a single message
## Else it will be splitted to streaming and acceptance message
mv.cc.auto_accept.split-message=false
## If false (default), existing EPCs will not be processed while streaming.
## Note: It is recommended to enable only for non-auth CC.
##mv.cc.non_auth.pre_process_existing_epcs=false

## Possibly Obsolete

## Discrepancy Threshold value for the DC scenarios and reports
report.asn.discrepancy_threshold=20
##############################################################

## Possibly Obsolete
report.pi.total_inv_category=Total

## Possibly Obsolete

# Configure the attribute name for TradeItem and SalesfloorTarget.
attribute.trade_item=TradeItem
attribute.sales_floor_target=SalesFloorTarget

##ConceptDoc Display Compliance soln
## Possibly Obsolete

########################################################################################
# Properties to support exclusion of display tags from Cycle Count Acceptance report
# accuracy calculation.
# If exclude_display_tags is set to false (default value), all cycle counted EPC will be
# included in accuracy calculation.
# If exclude_display_tags is set to true, display tags with prefixes mention in 
# exclude_display_tags_prefixes property, will be excluded from accuracy calculation.
exclude_display_tags=false
exclude_display_tags_prefixes=

## Possibly Obsolete

# The following property limits the number of products (not items) that will be sent to the HH as Product Inventory.
# Applicable to Locate Item by SKU. Value should be > 0. Default 10000.
#li.product_inventory.rows.limit=10000


##ConceptDoc SIM Common Infra - Adjustments
## Possibly Obsolete

# The other attributes below take effect ONLY if inventory_adjustments.enabled is true.

# Inventory adjustments AND POS data receiving level - is SKU or some other product attributes.
# posupload.attr_list can hold comma separated list of attributes
# Default to SKU
posupload.attr_list=SKU

# Do we expect to receive POS data feed.
# Currently this attribute is NOT used to decide whether to start the scheduler for POS file load.
posupload.file_upload.enabled=false

# Data sync service 	 
# Default is set to 2 minutes 
posupload.data_sync_interval=120

oat.task.pos.adj_inv_data.interval=300
posupload.adj_inv_data_interval=300

# External pos feed files related properties
# External pos feed file upload scheduler frequency
posupload.pos_file_upload_interval=180
# External pos feed files location
# New unprocessed files are stored at this location
posupload.posuploadfiles=/usr/local/ofs/conf/posuploadfiles
# Processed files are moved to this location
posupload.processedfiles=/usr/local/ofs/conf/posuploadfiles/processed
# Error files are moved to this location
posupload.errorfiles=/usr/local/ofs/conf/posuploadfiles/error
# Retry count when accessing file - for locked
posfileupload.max.retrycount=3
# Retry count while reading file
posfileupload.fileretry.count=3
# Retry interval when accessing file - for locked in ms
posfileupload.fileretry.interval=1000
# Skip processing this file on first error if value is false
# else ignore errors and continue to process the file
posfileupload.skipfileonerror=false
# Skip rows that have error - if value is true then
# ignore error rows and continue with remaining rows
posfileupload.skiprowsonerror=false

# Adjustment Date format
posfileupload.dateformat=yyyy-MM-dd HH:mm:ss

## Possibly Obsolete

################################################################################
## PoE scenario related properties
################################################################################

## is trigger POE alarm from OFS enabled. By default false but currently not used. 
poe.alarm.enabled=false
## if true poe will alarm when all device antennas are offline 
vd.alarm_if_all_antenna_offline=true
vd.windowtime=30

## Possibly Obsolete

################################################################################
## Shelf Target related properties
################################################################################

##Shelf Target Site Identifier - Specifies mapper class for SiteIdentifier to SiteID mapping
##Possible values are com.oatsystems.solutions.apparel.util.GLNSiteServerMap, com.oatsystems.solutions.apparel.util.SiteNameSiteIDMap and custom mapper classes if any
## Any custom map class should implement ISiteIdentifierSiteServerMap
shelftarget.siteid.map.class=com.oatsystems.solutions.apparel.util.GLNSiteServerMap

##Shelf Target Product Identifier - Specifies mapper class for ProductIdentifier to Product ID mapping
##Possible values are com.oatsystems.solutions.apparel.util.SKUProductIDMap, com.oatsystems.solutions.apparel.util.GTINProductIDMap and custom mapper classes if any
#Default is no mapping, so commenting it out.
#shelftarget.productattr.map.class=com.oatsystems.solutions.apparel.util.SKUProductIDMap

## Shelf Target expected product attributes - Specifies set of attrib names which identifies the product
## for which the target values apply. 
## Possible values - upto 10 attr names as comma seperated values 
## Samples:
## shelftarget.expected.productattrs=SKU
## shelftarget.expected.productattrs=ModelSKU
## shelftarget.expected.productattrs=Supplier,Class,Code,Serial,Size,Color
shelftarget.expected.productattrs=SKU

## No of days an unresolved shelf target entry has to be retried before moved into error state
shelftarget.retry.days=3


# Process type for ASN object association
## Valid ONLY at xpress
asn.association.process_type=ITEM_RECV
# Process subtype for object association
## Valid ONLY at xpress
asn.association.process_subtype=ASN_AUTO


## Possibly Obsolete

#########Autounretire
oat.task.autoUnretireTask.enable=false
oat.task.autoUnretireTask.productCategory=Size
oat.task.autoUnretireTask.schedule=0 0 0,0 1/1 * ? *
oat.task.autoUnretireTask.childJob=AutoUnretireTriggerTask
# Auto unretire trigger task
auto_unretire_trigger_task.delay_time=10000
auto_unretire.rules_file.name=mv-autounretirerules
auto_unretire_trigger_task.wfe_status_recheck_time=60000

#autoretire after CC
cc.autoRetireTask.location_subtypes=Backroom,Sales Floor,Receiving Area,Returns Area
cc.autoRetireTask.startTime=16:00:00
cc.autoRetireTask.enabled=false
cc.autoRetireTask.minutesPastStarttime=150

## Possibly Obsolete

# Clearance relationship attributes
clearance.relationship_attrs=style,color

#  Days from current time that a cycle count will be shown (default 7 days) 
report.cc.compliance.days.to.show=7

# Compliance Report Attibutes drilldown 
cc.report.attributes=DeptName,Style

# Label Print Encoding Scheme
labelprint.encoding.scheme=grai-96

## Possibly Obsolete

#  Hours from current time that a cycle count can be act on (default 16 hours)
report.cc.compliance.allow.action.period.hour=16

zues.external.inventory.storage=true

##ConceptDoc POS, POE, Retirement
## Possibly Obsolete

#############################
##POS SCENARIO ID's
#############################
POS.scenarioExternalId.Sale=
POS.scenarioExternalId.Return=
POS.skip.Invalid.StoreId.Error=

#######################################################################################
###   POSSIBLY OBSOLETE PROPERTIES - END
#######################################################################################

#######################################################################################
###   CURRENTLY USED PROPERTIES - BEGIN
#######################################################################################



##ConceptDoc Infra - Products - Delete Products

## deleted_products_cleanup task properties
oat.task.deleted_products_cleanup.enabled=true
oat.task.deleted_products_cleanup.name=deleted_products_cleanup
oat.task.deleted_products_cleanup.description=Clear documents belonging to deleted products in Mongo collections.
oat.task.deleted_products_cleanup.schedule=30 0 * * *
oat.task.deleted_products_cleanup.class=com.oatsystems.service.apparel.DeletedProductsCleanup




##ConceptDoc SIM Common

########################################################################################
## Parameters to control what will be treated as a wrong timestamp in a message from HH.

## Lower bound: any timestamp lower than this (relative to current timestamp) will be 
## treated as a wrong timestamp. It will be replaced with the lower bound time (NOT 
## current time). 
## Default is 10 days (10*24*60 minutes) - i.e., current timestamp - 10 days.
assn.lower_bound.minutes=14400

## Upper bound: any timestamp higher than this (relative to current timestamp) will be
## treated as a wrong timestamp. It will be replaced with the current time stamp.
## Default is 10 minutes (ie., current timestamp + 10 mins).
assn.upper_bound.minutes=10

##ConceptDoc SIM Common


########################################################################################
##customer specific config
customer.property.file=

##Tracking SOH/MDQ/Variance APIs data 
##location to store the data 
soh.file.backup.location=/usr/local/ofs/conf/shared/SOH
mdq.file.backup.location=/usr/local/ofs/conf/shared/MDQ
variance.file.backup.location=/usr/local/ofs/conf/shared/Variance
file.backup.maximum.days=10

## Task to remove older back up files(SOH/MDQ/Variance) 
oat.task.purgeBackUpFiles.enabled=true
oat.task.purgeBackUpFiles.schedule=00 02 * * *


##ConceptDoc SIM Common - Data Purge

## Obselete Halo Data purge configurations
#oat.task.purgedbprocess.enabled=false
#oat.task.purgedbprocess.schedule=0 1 * * *
#oat.task.purgedbprocess.collections.list=ReturnsSummary,RetireSummary,productCoverageStaging,CCVariance,ccStagingItem,ccAttributeLevelAccuracy,CCInventoryData,teamCountSession,expMap,TaggingSummary,message_error,process,PutawaySummary,shelfTargetStaging,inventoryStaging,ReceivingSummary,epcCurrentState,cc_detail,teamCountSessionAccuracyCalcData,TaggingSummaryDetailed,teamCountSessionData,PushNotificationData,epcEventHistory
#oat.task.purgedbprocess.PushNotificationData.days_to_retain=180
#oat.task.purgedbprocess.CCVariance.days_to_retain=90
#oat.task.purgedbprocess.ccStagingItem.days_to_retain=90
#oat.task.purgedbprocess.ccAttributeLevelAccuracy.days_to_retain=90
#oat.task.purgedbprocess.CCInventoryData.days_to_retain=90
#oat.task.purgedbprocess.teamCountSession.days_to_retain=90
#oat.task.purgedbprocess.expMap.days_to_retain=90
#oat.task.purgedbprocess.TaggingSummary.days_to_retain=90
#oat.task.purgedbprocess.message_error.days_to_retain=90
#oat.task.purgedbprocess.process.days_to_retain=90
#oat.task.purgedbprocess.PutawaySummary.days_to_retain=90
#oat.task.purgedbprocess.ReceivingSummary.days_to_retain=90
#oat.task.purgedbprocess.productCoverageStaging.days_to_retain=90
#oat.task.purgedbprocess.ReturnsSummary.days_to_retain=90
#oat.task.purgedbprocess.RetireSummary.days_to_retain=90
#oat.task.purgedbprocess.shelfTargetStaging.days_to_retain=90
#oat.task.purgedbprocess.inventoryStaging.days_to_retain=90
#oat.task.purgedbprocess.cc_detail.days_to_retain=90
#oat.task.purgedbprocess.epcCurrentState.days_to_retain=365
#oat.task.purgedbprocess.teamCountSessionAccuracyCalcData.days_to_retain=90
#oat.task.purgedbprocess.TaggingSummaryDetailed.days_to_retain=90
#oat.task.purgedbprocess.teamCountSessionData.days_to_retain=90

### ItemOptix multi-tenant purge configurations
## Data Group configurations (Do not override)
purge.data_groups=CC,REPORT,MESSAGING,PROCESS,STAGING,META,ASN,PRODUCT_COVERAGE,SOH,DISPLAY_EPC,EPC

## Data group and Collection/Table configuration (Do not override)
CC.purge.collections=CCInventoryData,CCVariance,smartCCData,ccStagingItem
CC.purge.tables=cc_detail,potential_merge
REPORT.purge.collections=TaggingSummary,TaggingSummaryDetailed,PutawaySummary,ReceivingSummary,ReturnsSummary,RetireSummary,POSHistory,POEHistory,PushNotificationData
MESSAGING.purge.collections=messageInfo,message_error,hh_message_info
PROCESS.purge.collections=process
PROCESS.purge.tables=process
STAGING.purge.collections=expMap,teamCountSession,inventoryStaging,shelfTargetStaging
META.purge.collections=productUploadDetails
ASN.purge.collections=shipment,receipt
PRODUCT_COVERAGE.purge.collections=productCoverageAdmin,productCoverageData,productCoverageStaging
SOH.purge.collections=externalInventory
DISPLAY_EPC.purge.collections=displayEpcCurrentState,displayEpcEventHistory,displayInventory
EPC.purge.collections=epcCurrentState,epcEventHistory,Inventory

## EPOCH purge fields configured for these collections (Do not override)
epoch.purge_field.collections=TaggingSummaryDetailed,PutawaySummary,ReceivingSummary,ReturnsSummary,RetireSummary,POSHistory,POEHistory,PushNotificationData,epcCurrentState,messageInfo,message_error,hh_message_info,process,inventoryStaging,productCoverageAdmin

## Collection-Purge Field configuration (Do not override)
CCInventoryData.purge_field=ccDetailD
CCVariance.purge_field=ccDetailD
smartCCData.purge_field=ccDetailID
ccStagingItem.purge_field=ccDetailID
cc_detail.table.purge_field=cc_date
potential_merge.table.purge_field=potential_merge_id

TaggingSummary.purge_field=_id
TaggingSummaryDetailed.purge_field=processStartTime
PutawaySummary.purge_field=processStartTime
ReceivingSummary.purge_field=processStartTime
ReturnsSummary.purge_field=returnTs
RetireSummary.purge_field=processStartTime
POSHistory.purge_field=posTs
POEHistory.purge_field=poeTs
PushNotificationData.purge_field=insertTimestamp

messageInfo.purge_field=arrivalTs
message_error.purge_field=updateTs
hh_message_info.purge_field=arrivalTs

process.purge_field=processStartTime
process.table.purge_field=end_ts

expMap.purge_field=_id
teamCountSession.purge_field=ccDetailID
inventoryStaging.purge_field=insertDate
shelfTargetStaging.purge_field=_id

productUploadDetails.purge_field=processStartTime

shipment.purge_field=updatedTime
receipt.purge_field=insertedTime

productCoverageAdmin.purge_field=scheduledCompletionDate
productCoverageData.purge_field=cycleId
productCoverageStaging.purge_field=insertTime

externalInventory.purge_field=extInvUpdatedTS

displayEpcCurrentState.purge_field=lastSeenTime
displayEpcEventHistory.purge_field=epc
displayInventory.purge_field=_id

epcCurrentState.purge_field=lastSeenTime
epcEventHistory.purge_field=epc
Inventory.purge_field=_id

## Custom field config (Can be overridden to include additional purge field and values)
messageInfo.custom_purge_fields=responseStatus:Completed
hh_message_info.custom_purge_fields=responseStatus:Completed
productUploadDetails.custom_purge_fields=status:Completed

## Batch size of deletion per each run of the task (Can be overridden)
purge.records_purged_per_run=2000

## Data retention period config (Can be overridden based on tenant needs)
purge.days_to_retain=92
# Do not change the staging retention period without consultations form Engg/L3
STAGING.purge.days_to_retain=92

################################################
##ConceptDoc - SIM Common - Intelligent Tasks

#Configurations for data driven task MV-11650 
#All data driven tasks are disabled by default.
##Config required for MV-11820
auto_task_sell1replen1_enabled=false
auto_task_sell1replen1_trigger_process_type=ITEM_RETIRE:ITEM_SOLD,ITEM_POS
auto_task_sell1replen1_target_usecase=REPLENISHMENT
##Config required for MV-11821
auto_task_order1pick1_enabled=false
auto_task_order1pick1_target_usecase=PICK_ORDERS
##Config required for MV-11822
auto_task_pick1pack1_enabled=false
auto_task_pick1pack1_trigger_process_type=ITEM_PICK
auto_task_pick1pack1_target_usecase=PACK_ORDERS
##Config required for MV-13441
auto_task_reserve1unreserve1_enabled=false
auto_task_reserve1unreserve1_target_usecase=UNRESERVE

##ConceptDoc SIM Common - Intelligent Tasks

##Default usecase name for tasks with process type and process subtype is defined
##Tasks created from portal would use this usecase name
##HHUI.xml also should have these usecase names
##If a different usecase name is used, the below properties must be changed accordingly
##task.<process_type>.<process_sub_type>.scenario_name=<usecasename>. Case sensitive
task.ITEM_TRACK.CC.scenario_name=Count Items
task.ITEM_TRACK.FCC.scenario_name=Count Items
task.ITEM_TRACK.TCC.scenario_name=Team Cycle count
task.ITEM_TRACK.FTCC.scenario_name=Team Cycle count
task.ITEM_REPLEN.HH.scenario_name=Restock Items
task.ITEM_PICK.HH.scenario_name=Pick Orders
task.ITEM_PACK.ASN_HH.scenario_name=Pack Orders
task.ITEM_UNRESERVE.HH.scenario_name=Hold and Release
##'Free form' use-case name is hard-coded in mobile and should not update it as long its made configurable in HandheldUI.xml
task.FREE_FORM.HH.scenario_name=Free Form
## For Display related processes, the process subtype will be appended by '_DISPLAY'
## For Display Count
task.ITEM_TRACK.FCC_DISPLAY.scenario_name=Count Items
## For Display Replenishment
task.ITEM_REPLEN.HH_DISPLAY.scenario_name=Display Replenishment
##For Putaway
task.ITEM_TRACK.PUTAWAY.scenario_name=Put-away
##For Ship Items(Store Transfer)
task.ITEM_SHIP.HH_TRANSFER.scenario_name=Ship Items
##For Ship Items(DC Returns)
task.ITEM_SHIP.DC_TRANSFER.scenario_name=Ship Items
##For Intelligent Cycle Count
task.ITEM_TRACK.SMART_CC.scenario_name= Intelligent Cycle Count

##ConceptDoc SIM Common - EPCIS

#Property to enable/disable state transition logic in AssociateEpcToLocationMDBatch and ProcessCCData
epcStateTransition.isStateTransitionEnabled=true
epcStateTransition.isRetiredValid=true

##ConceptDoc SIM Common - ?

## Task responsible for MongoDB ICR Masterdata schedule sync
oat.task.mongodb.inventory.report.sync.enabled=false
oat.task.mongodb.inventory.report.sync.schedule=30 03 * * *

##ConceptDoc SIM Common - ?

##List of reports that should skip unknown sku
reports_skip_unknown_sku=Orders

##ConceptDoc SIM Common - ?

## default timezone if store timezone is not updated
customer.timezone=

##ConceptDoc SIM Common - ?

use_store_timezone_for_export=false








##ConceptDoc EPC State Transitions

########################################################################################

##Specify if the tags are re-usable.
mv.tag.reusable=false

##Specify if the EPC numbers are re-usable.
mv.epc.reusable=true

## Keep the AtLocation state for backward compatibility - same as Saleable.
epc.state.subtype.AtLocation=Backroom,Sales Floor,Receiving Area,Returns Area






########################################################################################
##ConceptDoc Cycle Count Expected Product-Count

## The following property limits the number of products (not items) that will be sent to the HH as Expected Inventory.
## Applicable to CC/FCC. Value should be > 0. Default 10000.
cc.expected_inventory.rows.limit=100000
##Prepare CC Expected on first successful message##
cc.expected_inventory.prepare_on_first_message=false
##ConceptDoc Cycle Count - Expected Product-Count

################################################################################
## Performing CC with expected products from External Inventory
################################################################################

## Flag to enable external inventory to be used for expected product
use_external_inventory_for_cc=true

## Flag to enable existing CC counted items along with external inventory to be used for expected product
## It will be in effect only when use_external_inventory_for_cc=true
use_staging_items_for_extinv_cc=true

## List of countable locations. For example, if a Backroom CC is done but not accepted yet, 
## when a Sales Floor CC is started, it's expected count, for each product, will be
## SOH minus (Counted in Backroom).
## This works when use_staging_items_for_extinv_cc=true
extinv_cc_locations=Backroom,Sales Floor

## The following 2 configuration parameters are not used anymore (in ItemOptix). 

## Location subType for primary inventory location. 
external_inventory_cc_primary_location_subtype=Sales Floor

## External Inventory enabled CC for all locations; Primary inventory location subTypes should be configured for CCing locations.
extinv_cc_primarylocations_XXX=

##Refer excel attached in MV-9272 for more info and configuration example is here:
#extinv_cc_primarylocations_Backroom=Sales Floor
#extinv_cc_primarylocations_Receiving_Area=Sales Floor,Backroom
#extinv_cc_primarylocations_Out_Of_Site_Location=Backroom



##ConceptDoc Cycle Count Closing CC

## This property controls how the CC accuracy is calculated. 
## Options are: 
## "MissingCount" - accuracy is (1 - (sum(missing count per product)/sum(expected count per product)))*100
## "MissingAndExtraCounts" - accuracy is (1 - ((sum(missing count per product) + sum(extra count per product))/sum(expected count per product)))*100
## Accuracy calculation applies to all CC use-cases (unfiltered and filtered CCs, Team CC, whole store CC) 
## and to how accuracy is calculated in the CC Acceptance report.
cc.accuracy_calc_mode=MissingCount

##Concept Doc Display Cycle Count Report
# How accuracy is calculated in the Display CC Report.
displaycc.accuracy_calc_mode=MissingCount

##ConceptDoc Cycle Count - Accuracy Calc

##when this property is set to true, only valid eppcs will be used to calulate accuracy.
cc_accuracy.valid_epcs_only=false

##Used when cc_accuracy.valid_epcs_only is set to true. Epcs which belong to mentioned invalid states will be removed for accuracy calculation
cc.invalid_epc.states=Retired,Shipped

##ConceptDoc Cycle Count - report

##Property is  to show all pending CCs in same location for the user to merge
cc.accp.all_pending_ccs=false


##ConceptDoc Cycle Count - Processing for acceptance

## Synchronous epcEventHistory logging if property is set to true
cc.epc_history.logging.enabled=true

##ConceptDoc Cycle Count - External API
## Properties for external device cycle count
## Should be initialized for to be used otherwise error response is returned by server
external_cc.scenario_external_id=


##ConceptDoc Cycle Count - Stream Processing

## Batch size for CC Event processing
cc.event.batch.size=40000

##Define the size for the cached <filterExpression, skus> LRU map
lru.filterexpression.skus.size=500
##Type of database to be accessed for obtaining filtered products:
##Accepted Values: sql, mongo
#filter.product.versionName=sql

##ConceptDoc Cycle Count - Processing for Acceptance

## Configure scenario pool lookup strategy.
## Possible values are com.oatsystems.workflow.apparel.DefaultScenarioPoolNameResolver (default), com.oatsystems.workflow.apparel.CCUse2PoolsScenarioPoolNameResolver 
## or a custom implementation
# pooling.name_resolver=com.oatsystems.workflow.apparel.CCUse2PoolsScenarioPoolNameResolver

##ConceptDoc Cycle Count Processing after Acceptance

#  External scenario Id to use for accept/merge action (default cyclecount1)
CC_COMPLIANCE_EXT_SCENARIO_ID=cyclecount1

#  Default service name to use for accept/merge action (default json_apparel_tag_data_svc)
CC_COMPLIANCE_DEFAULT_SERVICE=json_apparel_tag_data_svc


##ConceptDoc Cycle Count - Threshold Calc 
## CC Threshold for different combination of attributes are stored in this file
CCThreshold.file.location=/usr/local/ofs/conf/shared/CCThreshold.csv

## Splitter used in combination of attributes for CC Threshold rules
threshold.attributes.splitter=,

## Splitter used in CC Threshold rules
threshold.rules.splitter=,

## CC Threshold rules generic key 
threshold.attributes.generic.key=*

##ConceptDoc Cycle Count - Threshold Calc 

# Threshold at sku level for CC detail accuracy page in Portal
cc.skus.threshold=85

## CC Threshold Calculation group by attributes
CCThreshold.attrs.landmarksplsh=
CCThreshold.attrs.landmarkmx=

## Store description splitter 
store_description_splitter=

oat.task.checkInventory.enabled=true
oat.task.checkInventory.schedule=50 * * * *
oat.task.checkInventory.externalInventoryTime=07:30:00

## Default threshold value to compare against the different categories on sending variance data 
## any float values can be set as default threshold
cc.variance.default.threshold.value=70.0


##ConceptDoc Cycle Count - Post Processing

###ICR REPORT###
cc.icr.enabled=true

## cc locations needs to be merged for CC Variance data calculation
cc.merge.sub.locations=Sales Floor,Backroom


cc_variance_flag_file_path=/usr/local/ofs/conf/shared/CCVariance/

cc_variance_flag_file_splitter=,

## Task to load the variance posting flag 
oat.task.loadVarianceFeedFlag.enabled=true
oat.task.loadVarianceFeedFlag.schedule=00 03 * * *

## cc variance posting maximum records per message
cc_variance_posting_batch_size=10000


##ConceptDoc Cycle Count - ?
 
#CC acccuracy calculation level 
cc.accuracy_calc_level=epc

##ConceptDoc Cycle Count - SOH

##External Inventory upload through the file - By default this configuration will be disabled. It will be enabled based on the customer requirement.
## When the below configuration is false, then it will concatenate the existing external inventory with the new inventory data
## if the below configuration is true, the existing external inventory for that site will be removed and the new data from the file will be uploaded.
#clear_externalInventory_of_site=false





##ConceptDoc Cycle Count Stream Processing
## TCC

########################################################################################
## Team CC configurations
########################################################################################
## Global accuracy threshold configuration for all sites. For Site specific threshold config, use "com.oatsystems.tcc.threshold.WalthamStore=90".
com.oatsystems.tcc.threshold.Global=90

## All intervals are in seconds
## Time interval in which device goes from REGISTER/UPDATE state to OFFLINE state.
com.oatsystems.tcc.submitInterval=120
## Time interval in which device goes from OFFLINE state to INACTIVE state.
com.oatsystems.tcc.inActiveInterval=600
## Time interval to auto-submit the session after all the devices participating goes to INACTIVE state.
com.oatsystems.tcc.autosubmit.inActiveInterval=86400
## To recover the session in olderFormat(3190 support). False will recover the SDK session.
com.oatsystems.tcc.recoverSession.olderFormat=false
## Display attributes for TeamCount session 
com.oatsystems.tcc.display.attributes=SKU
## TeamCC scenario external ID
com.oatsystems.tcc.scenarioExternalId=teamcc1

## The temporary location identified by the loc_subtype to which new items will be bound. Default "Assembly".
#com.oatsystems.tcc.temploc.subtype=Assembly

##ConceptDoc Cycle Count - Stream Processing

#Threshold value for TCC after which accuracy calculation will be started
tcc_accuracy_calc_threshold=60









##ConceptDoc Replenishment and Putaway - Replen

## This property defines what states contribute to restocking. This should be a sub-set of 
## the states for site inventory. 
#report.pi.subtypes_for_restock=Backroom, Receiving Area, Returns Area
states.restock_from=Saleable.BR, Saleable.Recv, Saleable.Returns

## This property defines what states are targeted for restocking. This should be a sub-set of 
## the states for site inventory. It should also be Total - RestockFrom.
#report.pi.subtype_for_salesfloor=Sales Floor
states.restock_to=Saleable.SF

##ConceptDoc Replen and Putaway

## C&A specific context attribute (combine product attribute) configuration being used for replenishment APIs
cna.unique.product.attribute=

##ConceptDoc Replen and Putaway - Active/Inactive Ranges

##Inventory Rule configuration attribute
oat.task.inventory.rule.enabled=false
oat.task.inventory.rule.inventory_rule_task.schedule=0 30 * * *
##the putaway summary collection population is one part of the inventory_rule task
##this property will consist of classes that need to run in the task. But the inventory_rule task is disabled by default. 
##To disable the population of Replenishment putaway, removing the class "com.oatsystems.service.inventory.rule.RestockPutawayPopulation".
oat.task.inventory.rule.inventory_rule_task.RULES_CLASS_NAME=com.oatsystems.service.inventory.rule.DeactivationRule,com.oatsystems.service.inventory.rule.ActivationRule
oat.task.inventory.rule.inventory_rule_task.TIMEZONE=
oat.task.inventory.rule.inventory_rule_task.POOL_SIZE=5

inventory.rule.filter.enabled=false
inventory.rule.flag.names=DeactivationRule

inventory.rule.filter.results.DeactivationRule=true
inventory.rule.startdate.attribute.DeactivationRule=BTCStartDate
inventory.rule.enddate.attribute.DeactivationRule=BTCEndDate
# Modified this to BtC from Btc based on feedback from Saba, during MV-17554
inventory.rule.flag.name.DeactivationRule=BtC

inventory.rule.filter.results.ActivationRule=true
inventory.rule.startdate.attribute.ActivationRule=AdvertStartDate
inventory.rule.flag.name.ActivationRule=ADVERT

inventory.rule.activation.filter.enabled=false
inventory.rule.activation.flag.names=ActivationRule

##ConceptDoc Replen and Putaway - Active/Inactive Ranges

## configurations for minimum units of attributes inventory rule
inventory.rule.MinimumUnitsOfAttributesRule.attrs=Style,Color
inventory.rule.MinimumUnitsOfAttributesRule.delimiter=,
inventory.rule.MinimumUnitsOfAttributesRule.minEpcCount=2


##ConceptDoc Replen and Putaway - S1R1

##flag to indicate use Sell1Replen1 Logic for shelf target 
replenishment.sell1replen1.enable=false
replenishment.sell1replen1.sale.processes=SALE,RETIRE,ITEM_RETIRE,ITEM_POS
replenishment.sell1replen1.attr=UniqueProductIdentifier

## Shelf target staging logging. By default, false
replenishment.sell1replen1.logging.enabled=false

##ConceptDoc Replen and Putaway - Shelf Targets

## Default Shelf-Target count for all the Products
default.shelftarget.count=1

## File-Based ShelfTarget Upload
## isComplete = true - Current SKU's in file will be considered, Remaining SKU's defaults to 0
## isComplete = false - Current SKU's considered, Remaining SKU's not updated
shelftarget.isComplete=false

## Inventory check on the locations to identify the hot products 
## i.e inventory should be zero for the product identifier in the specified 
## location sub types to qualify as a hot product
hotproduct.inventory.location=Sales Floor

## Store specific POS business location
## Default POS business location is Sales Floor for all the stores that are not configured
## Provide the store_description in the key (store_desc.POS.BUSINESS.LOCATION)
## eg : UAE-DXD-60062-DXDB.POS.BUSINESS.LOCATION=Backroom

## flag to mention store descriptions has splitter in prefix
## if no,set false,else true
store_description_with_prefix_splitter=true




##ConceptDoc Inventory Maintenance - Export Inventory API

## Send ERP data when CC got accepted/merged. By default, true
send_erp_data_on_accept_cc=false

## time range for sending the RFID Inventory Export to client
## 24hrs format (HH:mm)  eg: 10:00 or 16:30
## LOCAL time for the store will be checked, not server time.
## See the 2 params after the min and max time params for specifying
## store timezone. 
min_time_on_rfid_inv_exp=07:00
max_time_on_rfid_inv_exp=10:00

## File that specifies timezone for each store/site.
## Should have the store name, a comma, and the timezone in Java timezone id format
## For example: SP-JED-21128-AMJ,Asia/Riyadh
## Specifying the timezone id instead of +04:00 takes care of daylight savings time as well.
store_timezone_file_path=/usr/local/ofs/conf/StoresTimezones.csv
store_timezone_file_splitter=,

# retry client properties
lmg.rfidinventory.url=https://abc.com
lmg.auth.url=https://sts.landmarkgroup.com/adfs/oauth2/token
lmg.auth.clientid=abc
lmg.auth.clientsecret=def
restclient.retry=2
restclient.backoff.ms=1000

#content type for the text body in multipart requests
#supported values: json,text
restclient.multipart.text.content_type=text

# client lmg timezone
client.lmg.timezone=Asia/Dubai



##ConceptDoc Inventory Maintenance - Export Inventory API

## Merge from MV-9290
## This flag disables loading the config file containing 
# category-wise thresholds (CCThreshold.csv above). 
# If it is not loaded, then all categories are considered as 
# having met threshold. Since all categories have met threshold, 
# there is no need for a recount task. 
use_custom_accuracy_calculation=false
rfidinventory.export.mode=url
rfidinventory.export.file.path=/usr/local/ofs/conf/shared/export/cc_inventory/

check_variance_posting_flag=true
check_cc_timing_for_posting=true

#check_store_ind_cc_for_export=false
#check_store_ind_cc_for_export_timeframe=12
#NA.stores=
#adjustments.export.file.path=/usr/local/OATxpress/ofs/conf/shared/export/adjustments/
#adjustments.export.threshold=98
#adjustments.sendalldata.stores=

#####################


##ConceptDoc Inventory Maintenance - ICR

## Attributes for Inventory Comparison report
## Attributes should be similar to attribute in MongoDB product collection
ICR_ATTRIBUTE=name

####################################################################################
## By default Sales Floor and Backroom count would be considered
## If other location subtypes must be considered then,
## ICR_LOCATION_SUB_TYPE must be configured with all required location subtype
## It should match the location subtype present in MongoDB location collection
## eg: ICR_LOCATION_SUB_TYPE=Backroom,Sales Floor
## Be default pool size is 2.
## For performance test/higher load, set higher values for ICR_POOL_SIZE

####################################################################################


##ConceptDoc Inventory Maintenance - Inventory Export

## Valid below codes to be considered for non sellable quantity
## If not provided, all retired are considered as non-sell 
## For retired - retirement reason code. eg ITEM_DESTROYED,ITEM_DETACHED. 
non_sellable_retirement_codes=
## For reserved - action reason code. eg CUSTOMER_PICKUP
## non_sellable_reserved_codes=

##NonSellable EPC State(Comma seperated) 
## eg: Reserved,Retired
nonsellable_epc_state=Reserved,Retired,Shipped

##ConceptDoc Inventory Maintenance - Inventory export

## Properties for Json/csv export of Cycle count data
cc.variance.export=false
cc.variance.export.location=/usr/local/ofs/workspace/export/ccdata/
cc.variance.export.mode=json

##NonSellable location subtypes(Comma seperated) 
## eg: Customer Pick-Up Area,Shipping Area
nonsellable_location_subtype=

##ConceptDoc Inventory Maintenance - Stock in/out

##Folder to log External System push data
pushData.file.backup.location=/usr/local/ofs/conf/shared/ExternalPushData/

##ConceptDoc Inventory Maintenance - On Shelf report

## Properties for OnShelf Report
onshelf.base.identifier=Style
onshelf.inventory.source=rfid_inv
onshelf.context.identifier.attribute=Category
onshelf.threshold.global_default=10

##ConceptDoc Inventory Maintenance - Export to file?
## Task to take inventory snapshots
oat.task.inventorySnapshot.enabled=true
oat.task.inventorySnapshot.schedule=0 11,23 * * *

##ConceptDoc Inventory Maintenance - Inventory Staging

## Inventory staging logging. By default, false
inventory_staging_logging_enabled=false

##ConceptDoc Inventory Maintenance - Product attribute update in inventory collection

#Update Product Attributes in Inventory
oat.task.inventoryAttributesUpdateTask.name=inventory_attribute_update
oat.task.inventoryAttributesUpdateTask.enabled=false
oat.task.inventoryAttributesUpdateTask.schedule=30 0 * * *
oat.task.inventoryAttributesUpdateTask.class=com.oatsystems.service.apparel.UpdateInventoryAttributesTask
oat.task.inventoryAttributesUpdateTask.description=Task responsible to update inventory attributes
oat.task.inventoryAttributesUpdateTask.args=inventoryUpdateLevels=1,2


##Task to update contextual product attributes in Inventory
oat.task.inventory.attribute.update.enabled=false
oat.task.inventory.attribute.update.schedule=*/30 * * * *
#Task would update contextual attribute either site-wise or for all sites based on input args
#Enable below for the task to perform site specific attribute update: 
#oat.task.inventory.attribute.update.args=-siteEPC <site1> <site2>
#Task args for all site attribute update. Default arg is: -all
#oat.task.inventory.attribute.update.args=-all

##ConceptDoc Inventory Maintenance - Product Coverage Admin
oat.tasks=productcoverage.admin,productcoverage.data,inventoryAttributesUpdateTask,receiving_asn.receive_processed_tag,receiving_asn.auto_receive_shipment

## Product coverage admin task to generate/update product coverage cycles
oat.task.productcoverage.admin.name=productcoverage_admin
oat.task.productcoverage.admin.enabled=false
oat.task.productcoverage.admin.schedule=5 0 * * *
oat.task.productcoverage.admin.class=com.oatsystems.task.productcoverage.ProductCoverageAdminTask
oat.task.productcoverage.admin.description=Task responsible to process the product coverage

##ConceptDoc Inventory Maintenance - Product Coverage Data Logging

## Product coverage data aggregation task - staging to data collection
oat.task.productcoverage.data.name=productcoverage_data
oat.task.productcoverage.data.enabled=false
oat.task.productcoverage.data.schedule=5 */1 * * *
oat.task.productcoverage.data.class=com.oatsystems.task.productcoverage.DefaultPCDataAggregationTask
oat.task.productcoverage.data.description=Task to aggregate EPC data from staging to data collection

##ConceptDoc Inventory Maintenance - Product Coverage Data Logging

## Product coverage cycle global configurations
#productcoverage.cycle.dateFormat=yyyy-MM-dd
#productcoverage.cycle.startDate=2019-09-01
#productcoverage.cycle.duration=7
#productcoverage.cycle.threshold=20

##ConceptDoc Inventory Maintenance - Product Coverage data logging

#Property to enable/disable Track Epcs in Association/Cycle Count scenarios
productcoverage.isTrackEPCEnabled=false

##ConceptDoc Inventory Maintenance - Product Coverage report

# For the Product coverage report widget the number of historical cycles it should fetch. 
report.prod_coverage.history_count=4

# The level of the attribute the product Coverage Donut would be using, here 1 = CustomerSegment
prod_coverage.donut.attr_level=1
# The default category values for the donut widget, any other category would be considered as Others
report.prod_coverage.categories=Men,Women,Kids

# The levels of attributes for the Product Coverage Tree ( 2 levels should be configured separated with comma)
prod_coverage.table.attr_level=0,1

#Threshold value to be sent over to portal
productcoverage.cycle.threshold=90

# Should the data for current cycle (in donut, report/table and sometimes in aggregate/tree widgets)
# come from epcCurrentState collection? 
# Value can be true or false. Default is true.
# Anything other than 'true' will make it false.  
prod_coverage.current_cycle.use_epc_current_state=true










##ConceptDoc POS, POE, Retirement

##ManualRetirement Missing Days
epc.missing.days=15


##ConceptDoc POS, POE, Retirement

##Config for manual retirement: Scenario external Id, location sub type to evaluate RP location
manual.retire.scenario.external.id=association1
manual.retire.association.sublocation=Out Of Site Location

##ConceptDoc POS, POE, Retirement

## denote if the pos API is real time or not
pos.real_time=false
pos.context.attribute=

##ConceptDoc POS, POE, Retirement - POS API

#The below attribute is for enabling sku based return in POS. This is just added for backward compatibility and should not be used for any customer.
pos.sku.based.return.enabled=false

##ConceptDoc POS, POE, Retirement - Loss Detection

##Task to update the status of POE epcs
oat.task.poeepcstatus.update.name=lossDetection
oat.task.poeepcstatus.update.enabled=true
oat.task.poeepcstatus.update.schedule=*/15 * * * *
oat.task.poeepcstatus.update.class=com.oatsystems.task.lossdetection.LossDetectionTaskMD
oat.task.poeepcstatus.update.description=Task for updating the status of poe epc's to determine LossDetection
oat.task.poeepcstatus.update.days=15

##ConceptDoc POS, POE, Retirement - POS from mobile/API

##POS Multi site HHMessage scheduler configuration
oat.task.pos.multi.site.feature.on=true
oat.task.pos.multi.site.hhmessage.name=pos-multi-site-hh-message
oat.task.pos.multi.site.hhmessage.enabled=false
oat.task.pos.multi.site.hhmessage.schedule=*/2 * * * *
oat.task.pos.multi.site.hhmessage.class=com.oatsystems.service.apparel.POSMultiSiteHHMessageTask
oat.task.pos.multi.site.hhmessage.description=Task responsible to create POS multi site hhmessage


##ConceptDoc POS, POE, Retirement - POS data to EPCIS Repository

#Maximum number of EPCs to send to EPCIS repository in one event. 
#Range: 1-30. Any value lesser than 1 will be reset to 1 in code. Any value greater than 30 will be reset to 30 in code. 

pos.fixed_reader.max_epcs_to_collate=3

#Maximum number of seconds to wait before sending an event to EPCIS repository, with one or more EPCs. 
#Range: 1-600. If value is 1 or lesser, it will be reset to 1. If value is greater than 600, it will be reset to 600 in code. 

pos.fixed_reader.max_time_for_collation_seconds=20



##ConceptDoc Store Tagging and Returns - Label Printing

##Properties to specify locations of label template upload location and zip file creation location
labeltemplate.upload.location=/usr/local/ofs/workspace/labeltemplates
labeltemplate.mobile.file.location=/usr/local/ofs/workspace/labeltemplatezip

##ConceptDoc Store Tagging and Returns - SSE from mobile

# Support QR code scan for Nike IDGen
support.qrCode.scan=false







##ConceptDoc Hold and Release

##Validity for reserved epcs (In days)
reserved_epcs_validity=3







##ConceptDoc Receiving and Shipping - ASN Receiving

##This flag to associate the wrongly received items to current site's inventory
## true makes EPCs in saleable state and added to inventory
## false makes EPCs in Xreceived state.
asn_recv.wrong_shipment_epcs_assn=false

## This flag is to associate the received items to current site's inventory
## true makes EPCs in saleable state and added to inventory
## false makes EPCs in Xreceived state.
receiving_asn.associate_tag_to_inventory=true

## MV-16475 -- Time period in days after which ASN shipments will be auto-received
asn_receiving.auto_receive.period_days=7

## ConceptDoc - Shipping and Receiving - Auto receive shipment

## Task to automatically receive shipment
oat.task.receiving_asn.auto_receive_shipment.name=auto_receive_shipment
oat.task.receiving_asn.auto_receive_shipment.enabled=false
oat.task.receiving_asn.auto_receive_shipment.schedule=0 0 */1 * *
oat.task.receiving_asn.auto_receive_shipment.class=com.checkpt.task.receive.AutoReceiveShipment
oat.task.receiving_asn.auto_receive_shipment.description=Task to automatically receive shipment

## Configurations for auto_receive_shipment task
receiving_asn.auto_receive.period_in_days=7

## ConceptDoc - Shipping and Receiving - Receive processed tag

## Task to receive tags associated to shipment which are processed by other RFID processes
oat.task.receiving_asn.receive_processed_tag.name=receive_processed_tag
oat.task.receiving_asn.receive_processed_tag.enabled=false
oat.task.receiving_asn.receive_processed_tag.schedule=10 */6 * * *
oat.task.receiving_asn.receive_processed_tag.class=com.checkpt.task.receive.ReceiveProcessedTag
oat.task.receiving_asn.receive_processed_tag.description=Task to receive tags associated to shipment which are processed by other RFID processes

## Configurations for receive_processed_tag task
receiving_asn.receive_processed_tag.carton_threshold=100
receiving_asn.receive_processed_tag.enable_seen_later_status=true
receiving_asn.receive_processed_tag.period_in_days=10
receiving_asn.receive_processed_tag.process_types=CYCLECOUNT,PUTAWAY,SALE

##ConceptDoc Receiving and Shipping - Receiving workflow for mobile

########################################################################################
## Default location subtype for the location inference for receiving scenarios.
receiving.loc_subtype=Receiving Area
returns.loc_subtype=Sales Floor
encode.receiving.loc_subtype=Backroom
unreserve.receiving.loc_subtype=Backroom

##ConceptDoc Receiving and Shipping 

##This property is set to false when the shipping and the receiving report should include unknown skus.
## Set to true if shipping and receiving report should skip the unknown skus. 
report_recv_ship_skip_unknown_sku=false








##ConceptDoc SIM Misc - translation API

##Path where the codetranslation.json file is placed for translation reason code.
translate.code.fileDir=/usr/local/ofs/conf/shared









##ConceptDoc Display Compliance 

# Display Item configuration
display.item.enable=true

# Display Item Encoding Scheme
display.item.encoding.scheme=grai-96

# Display Item Encoding Type
display.item.encoding.type=grai

# Location subtype for display location
display.item.location.subtype=Sales Floor

# Display Items header value
display.item.header=33


# Display Item Base Identifiers
# Provide attribute names as per product master 
display.item.base.identifier=style,color

##ConceptDoc Display Compliance

##To consider inventory from external inventory provided or from the rfid inventory(ext_inv/ rfid_inv)
display_cc.expected_count_source=rfid_inv

##ConceptDoc DisplayTarget Via SOH

##To enable display target calculation based on SOH

display.set_target.use_soh.enabled=false

#Task to send epc history data to portal
oat.task.publishepchistory.enabled=false
oat.task.publishepchistory.schedule=0 1 * * *
oat.task.publishepchistory.BATCHSIZE=10000
#portal url endpoint to which epc history has to be sent
portal.epchistory.url=





##ConceptDoc Order Management - Packing

## For DC return, damaged items that are retired are allowed to be packed. 
## There could be other retired items that are also allowed, so the following is a comma-separated
## list of retirement reasons that can go back to DC. 
packing.dc_return.allowed_retirement_reasons=TAG_DAMAGED

##ConceptDoc Order Management - ?

##Workaround fix for MV-13445, MV-13401, MV-13409 to verify shipment number is same as order number.
##In case if not same, convert shipment number to the order number 
##For print api the altShipment1 and altshipment2 are expected to be null, If not then it is fetched from db and changed.
manageorder.shipmentnumber.ordernumber.check=false













##ConceptDoc ?

##Report start time if less than specified date range, then set to default range, this implies the start date should be greater than the year before
report_start_time_year_range=1








##ConceptDoc DC

################################################################################
## DC Processes configuration
################################################################################

DC.scenario.error.action.map.file=dc-error-actions
DC.backend.process.thread=1
DC.product_attr_list=Style,Department
#Sets the epc batch size of scenario
DC.epcread_batch_size=100
DC.allow_database_transactions=true
DC.publish_data_to_subscribers=true
DC.dc_num_publisher_threads=2
DC.data_serialization_path=/usr/local/ofs/conf/dcscenariodata/publish/
DC.data_serialization_enabled=true

##########The configuration are for migration Halo edge ASN data to Halo core#########
#DC.halo_asn_scenario_externalID=asnrecvshipping1
#DC.halo_putaway_scenario_externalID=putaway1
#DC.portal_url=https://eval-halo.checkpointsystems.com/rest/halo/private/FBgGRNdPkb81DqX2Ne-v7E
#DC.retailer_id=
#DC.box_threshold=
#DC.halo.host=

###portal credentials(Format should be username:password) should be encrypted by OAT encryption utilies.
#DC.portal_credentials=

########### From Wirama oar ########################

DC.asn_lookup_enabled=false
DC.persistance.association_enabled=false
DC.persistance.skip_on_error=true
##Supported error codes
# noBoxIDRead, noStoreInfoRead, noBarcodeRead, noAsnAvailble, possibleAsnOffset, asnOffset, excessAsn, recoveredData, unexpectedEpc, deviceReboot, scenarioRestart, deviceEnabled;
DC.persistance.skip_on_error.codes=asnOffset,excessAsn

##Supported variables
#$STATIONID, $SCENARIOTYPE, $BOXID, $DESTINATION, $YEAR, $MONTH, $DAY, $HOUR, $MIN, $SEC, $MILLIS
#
##Samples
#$STATIONID$SCENARIOTYPE$YEAR$MONTH$DAY$HOUR$MIN$SEC$MILLIS - 1ITEM_SHIP20160426145333512
#$BOXID - BOX1
#$BOXID_$DESTINATION - BOX1_STORE1
#$BOXID$YEAR$MONTH$DAY$HOUR$MIN$SEC$MILLIS - BOX120160426145333512
#$BOXID_$YEAR$MONTH$DAY$HOUR$MIN$SEC$MILLIS - BOX_120160426145333512
#Used for both Table and Tunnel
DC.ASNNumber.UniqueID.template=$BOXID
DC.BOXID.UniqueID.template=$STATIONID$SCENARIOTYPE$YEAR$MONTH$DAY$HOUR$MIN$SEC$MILLIS

########### From Wirama oar ########################

IS_MLMODEL_ENABLE=true
MLMODEL_FILE_NAME=productML4feature_gc.h5

defaultDeciderThreshold=-1
strictDeciderThreshold=2
newEPCDeciderThreshold=-1



#######################################################################################
###   CURRENTLY USED PROPERTIES - END
#######################################################################################


## ccvariance.brands.list=Retailer Brands  and should be comma separated 
## The ccvariance.brand.list should be same as portal_api.properties. it should not be different.
ccvariance.brands.list=
## The below properties are defined to get the ccvariance level cc details which are used in cc. For retailer Id, these should be prefixd with retailerId 
## Ex. ccvariance.brands.list=retailerId then prefix the retailerId in the below configuration like retailerid.ccvariance.cc.levels.
ccvariance.cc.levels=4
ccvariance.cc.level0=DeptName
ccvariance.cc.level1=MajorClassID
ccvariance.cc.level2=SubClassID
ccvariance.cc.level3=Style
