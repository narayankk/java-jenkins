## contains properties related to EPCIS integration and other functionalities

### property to set class responsible for parsing EPCIS XML document. The property value should be set to full qualified name of a class that implements interface IEPCISDocumentParser
### a new parser instance is created for processing each XML document
xml.parser=com.oatsystems.project.epcis.parser.EPCISDocumentSAXParser

### location where epcis 1.2 schema files are located, relative to classpath
#query.schema.location=/epcis_1.2-schema/EPCglobal-epcis-query-1_2.xsd

### comma separated list of consumers. The consumers point to implementation of IEPCISEventConsumer interface
### Framework parses an EPCIS document into a set of IEPCISEvent. The set is then passed on to registered consumers
event.consumers=com.oatsystems.project.epcis.scenario.json.impl.ScenarioEPCISEventJSONConsumer

### property to monitor event processing lag; if lag exceeds the configured value in seconds, warning is logged..
## long term, statistics could be sent to external system
event.lag.interval=3600

#####  properties for EPCIS capture endpoint
capture.endpoint=
capture.basic_user=
capture.basic_pwd=
capture.content_type=application/xml

#####  properties for EPCIS query endpoint
query.endpoint=
query.basic_user=
query.basic_pwd=
query.content_type=application/xml

###### Properties for EPCIS subscriber's call back ##################################

### call back url
callback.url=

######  authentication credentials for EPCIS subscriber's callback url
#callback.basic.user=
#callback.basic.pwd=

### call back url is serviced by a servlet.. below properties configure async processing for same. timeout is in seconds.
### note that enabling async mode makes sense only if there are multiple subscribers.. in case there is one subscriber in the environment, disable this
callback.url.async=false
callback.url.async.timeout=120

### async servlet runs API in a thread pool, instead of using container thread (which in Tomcat seems to be using Http Request Pool, defeating the purpose of async in first place)
callback.url.pool.size=100

#### subscriber name to be used in single subscriber per environment model
subscriber.singleton.mode.name=checkpt-subscriber

#####  security properties to access epcis-subscription jsps.
subscription.admin.user=
subscription.admin.pwd=

####  event type to subscribe
subscriber.event.type=ObjectEvent,AggregationEvent

### call back schedule, subscriber
subscriber.schedule=0,5,10,15,20,25,30,35,40,45,50,55

epcis.ITEM_RETIRE.HH.disposition.urn.epcglobal.cbv.disp.unknown=RFID_TAG_WITHOUT_MERCH
epcis.ITEM_RETIRE.HH.disposition.urn.epcglobal.cbv.disp.damaged=DAMAGED_MERCH
epcis.ITEM_RETIRE.HH.disposition.urn.epcglobal.cbv.disp.destroyed=SPLIT_MERCH
epcis.ITEM_RETIRE.HH.disposition.urn.epcglobal.cbv.disp.retail_sold=ITEM_SOLD
epcis.ITEM_RETIRE.HH.disposition.urn.epcglobal.cbv.disp.stolen=ITEM_STOLEN

epcis.scenario.json.ITEM_TRACK.PUTAWAY.external_id=epcis-putaway
epcis.scenario.json.ITEM_TRACK.CC.external_id=epcis-cc
epcis.scenario.json.ITEM_RETIRE.HH.external_id=epcis-retire
epcis.scenario.json.ITEM_RETURN.TAGGED_HH.external_id=epcis-return
epcis.scenario.json.ITEM_ENCODE.HH.external_id=epcis-sse
epcis.scenario.json.ITEM_POS.EXTERNAL_POS_FEED.external_id=epcis-pos

