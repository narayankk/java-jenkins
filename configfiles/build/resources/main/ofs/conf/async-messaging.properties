#producer.class=com.oatsystems.messaging.async.AsyncMessageProducer

#async-messaging.topicrefs=messages-to-configserver,messages-to-processserver,messages-many-to-many

default.topic=halo-core-messages

### Publisher configuration.
# There can be multiple topics (or queues) in the messaging system. 
# Module type of the message is used to decide which topic an incoming message should be published to. 
# Each module type can be mapped to a different topic for scalability if message volume necessitates it. 

# These are the list of module types 
message.topic.moduletypes=ERP, REPORT, INVENTORY, WORKFLOW, CC-COMPLETE, CC-ACCEPT, TASK-CREATE, DEVICE

# Each module's topic to which it's messages will be published is configured below. 
# Each such topic should be defined in topic.json. 
ERP.topic=halo-mv-messages
REPORT.topic=halo-mv-messages
INVENTORY.topic=halo-mv-messages
WORKFLOW.topic=halo-mv-messages
CC-COMPLETE.topic=halo-ccacceptance-messages
CC-ACCEPT.topic=halo-ccacceptance-messages
TASK-CREATE.topic=halo-core-messages
DEVICE.topic=halo-mv-messages



### Consumer configuration.
# Each message published to a topic can be routed to multiple consumer groups in parallel. 
# In Halo typically only one consumer group processes a message. Other consumer groups will ignore a message
# not meant for them. 
# Each property is of the form: <consumergroup>.processers=<list of processors>
# For example, "messages-to-erp" is a consumer group for topic "halo-mv-messages" defined in topic.json.
# This consumer group handles some n types of messages. Each processor handles one message type, and in code 
# it identifies what the message type is. 
# If the incoming message has that message type, the corresponding processor will be invoked. 
# No other processors will be invoked for that message type. 
# Other consumer groups will not have the same message type, and so no processor will be invoked for other consumer groups. 
messages-to-erp.processors=\
    com.oatsystems.service.ccdatapopulator.CCAccpReportPopulationMD, \
    com.oatsystems.erpmessaging.processors.RFIDInventoryConsumer, \
    com.oatsystems.erpmessaging.processors.OrderStatusConsumer, \
    com.oatsystems.erpmessaging.processors.ReconciliationEventDataConsumer, \
    com.oatsystems.erpmessaging.processors.ExternalEPCHistoryConsumer, \
    com.oatsystems.erpmessaging.processors.TaskStatusUpdateConsumer, \
    com.checkpt.erpmessaging.CycleCountExportConsumer, \
    com.checkpt.erpmessaging.InventoryExportConsumer, \
    com.checkpt.processor.GenericExportPushDataProcessor, \
    com.checkpt.erpmessaging.processor.ShipmentNoticeExportConsumer, \
    com.checkpt.erpmessaging.processor.ShipmentReceiptExportConsumer, \
    com.checkpt.service.messaging.DeviceStatusMessageProcessor

messages-to-inventory.processors=\
    com.oatsystems.service.inventory.mongodb.InventoryComparisonSynchronizer, \
    com.oatsystems.service.inventory.mongodb.MongoDBInventoryStagingSynchronizer, \
    com.oatsystems.service.productcoverage.event.ProductCoverageEventProcessor, \
    com.oatsystems.service.stockinout.event.StockInOutEventProcessor, \
    com.oatsystems.service.externalsystem.pushdata.event.ExternalSystemPushDataEventProcessor, \
    com.oatsystems.service.shelftarget.DefaultShelfTargetActivationService, \
    com.oatsystems.cc.event.CCEventMessageProcessor, \
    com.oatsystems.service.inventory.mongodb.MongoDBEPCHistorySynchronizer, \
    com.oatsystems.service.inventory.mongodb.InventoryAttrUpdateSynchronizer, \
    com.oatsystems.service.inventory.mongodb.MongoDBAssociationStagingSynchronizer, \
    com.oatsystems.service.inventory.mongodb.DisplayTargetViaSOHSynchronizer,  \
    com.checkpt.service.cyclecount.async.CCExpectedStagingDataSynchronizer


messages-to-cyclecount.processors=\
    com.oatsystems.service.ccdatapopulator.SmartCCDataProcessor
    
messages-to-ccacceptance.processors=\
    com.checkpt.service.messaging.CCAcceptMessageProcessor    

messages-to-workflow.processors=\
    com.checkpt.service.messaging.WorkflowMessageProcessor



messages-to-configserver.processors=\
    com.oatsystems.monitoringagent.service.serverstatus.ServerStatusNotifier, \
    com.checkpt.service.messaging.TaskCreationMessageProcessor, \
    com.checkpt.epcis.service.InternalLocationsProcessor

messages-to-processserver.processors=\

messages-many-to-many.processors=\
    com.oatsystems.wfe.service.ScenarioMessageProcessor, \
    com.oatsystems.bloomfilter.BloomFilterProductSynchronizer, \
    com.oatsystems.service.product.event.MetadataSyncEventSynchronizer, \
    com.oatsystems.service.config.device.event.DeviceConfigEventProcessor

message.inventory-shelf-target-sync.enable=false
